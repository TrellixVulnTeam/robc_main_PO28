#!/bin/bash

# Decommision hosts... be VERY sure first
# Run as yourself. Not as deploy. Not as root.
# Requires full sysadmin privs

if [ 0 == $(id -u) ];then
   echo "Not as root"
   exit 1
fi

#set -e

continue() {
   read -p "${1:-Continue?} [Y/n] " reply
   if test -z "$reply" -o "${reply:0:1}" = Y -o "${reply:0:1}" = y ; then
      return 0
   else
      return 1
   fi
}


host=$1
if [ -z "$host" ];then
   echo "Usage: $0 hostname" 1>&2
   exit 1
fi

echo -n "*** Checking if $host is in the ACE... "
if aceman rserver $host >/dev/null 2>&1;then
    echo Yes.
    if continue "Remove $host from ACE?";then
        if ! aceman rserver $host remove;then
            echo "Will not decom this host."
            exit 1
        fi
    fi
else
    echo No.
fi



echo -n "*** Checking if $host is retired in RT... "
status=$(rt list -l  -t asset  "Name = '$1'"  | grep ^Status | awk '{print $2}')
#test=: 
if [ -n "$status" ];then
   if [ "retired" != "$status" ];then
      echo "No."
      echo "$host is not retired in RT"
      if continue "Set $host retired in RT?"; then
      rt list -i -t asset "Name = '$host'" | rt edit - set status=retired
      rt list -l  -t asset  "Name = '$host'"  | grep ^Status 
      fi
   else
      echo Yes.
   fi
else
   echo DNE.
fi

ip=$(getent hosts $host | awk '{print $1}');



tmpdir=/tmp/decom.$$.$RANDOM
: ${PAGER:=less}




echo "$host decom by $(id -un)" | mail -s "$host decom by $(id -un)" red@evolvemediallc.com

if continue "Remove from puppet storeconfigs and puppetca?";then
echo -n "*** Removing from puppet certificate authority and storedconfigs... "
$test /usr/local/bin/puppetnodeclean ${host}
echo OK.
fi


#if continue "Remove from external nagios?";then
#echo -n "*** Removing from external nagios... "
#$test sudo su - deploy -c ./AT-RT/extnagiospush.sh
#echo OK.
#fi

if continue "Remove from internal nagios?";then
echo -n "*** Removing from internal nagios... "
for a in prd stg dev;do
   echo "   *** nagios.$a.gnmedia.net"
   $test ssh -t nagios.$a.gnmedia.net "test -f /etc/nagios/conf.d/${host}.cfg && sudo rm -vf /etc/nagios/conf.d/${host}* && sudo /sbin/service nagios reload; :"
done
echo OK.
fi

if continue "Remove from DNS?";then
echo "*** Removing from DNS... "
rm -rf $tmpdir
mkdir  $tmpdir
cd $tmpdir
svn co https://svn.gnmedia.net/sysadmins/trunk/dns >/dev/null || exit 1
cd dns || exit 1

updateserial() {
   zonefile=$1
   test -f $zonefile || return 0
   
   sed -i.bak "s/^\([^;]*$host.*\)/;\1 ;decomm/" $zonefile
   if diff -q $zonefile $zonefile.bak >/dev/null ;then
       echo "No change."
       return
   fi

   out=$(dnsupdateserial $zonefile)
   echo "($out)... OK."
}

echo "   *** Looking for $host in zones... "
hostzones=$(grep -l $host zones/*.{hosts,rev} zones/*/*.{hosts,rev})
if [ -n "$hostzones" ];then
   for a in $hostzones;do
      echo -n "       Found in $a, updating... "
      updateserial $a
   done
else
   echo "   *** Warning: $host not found in forward or reverse zones"
fi

if svn status 2>/dev/null | grep -q M >/dev/null ;then
   read -p "Please confirm DNS changes (enter to view in $PAGER)... "
   svn diff | $PAGER
   if continue "Commit changes?" ;then
      $test svn commit -m "Decom of $host"
   else
      echo "Dropping to a shell..."
      echo "You can edit, svn commit, and exit when you are done..."
      (export PS1="decom> "
      $SHELL)
   fi
else
   echo "No DNS changes"
fi
cd ..
rm -rf dns
fi

world=unknown
if test -x /opt/xcat/bin/nodels ;then
    if nodels $host >/dev/null 2>&1 ;then
        world=xworld
    fi
    master=$(vmtomaster $host)
    if [ -n "$master" ];then
#        if [[ "$master" =~ /:/ ]];then  # old-world and xworld vmtomaster have different output
	if echo "$master" | grep -q ":"; then
            master=$(echo "$master" | awk -F: '{print $2}')
        fi
        if nodels $master >/dev/null 2>&1 ;then
            world=xworld
        else
            world=xen
        fi
    else
        echo No master in RT
        world=unknown
    fi
fi
if [ "$world" = "xworld" ];then
    # xCAT
    if continue "REMOVE THE NODE from xCAT?";then
    if continue "Really?";then
       if lsdef $host | grep -q vmhost ;then
           # xCAT VM
           rpower $host off
           nodech $host vm.host=metal-1401.lax.gnmedia.net
           rmvm -p $host
       fi
       makeconservercf -d $host
       makedhcp -d $host
       makehosts -d $host
       noderm $host
    fi
    fi
fi
if [ "$world" = "xen" ];then
       if continue "REMOVE THE XEN VM from $master?";then
       if continue "Really?";then
       echo -n "*** Removing VM... "
       echo -n "on $master... "
       $test ssh -t $master "sudo /usr/sbin/xm destroy $host; sudo grep -q /dev/VolGroup00/$host /etc/xen/$host && sudo /sbin/lvm lvremove /dev/VolGroup00/$host && sudo rm -vf /etc/xen/$host /etc/xen/auto/$host ; :"
       echo OK.
       fi
       fi
fi
if [ "$world" = "unknown" ];then
       if continue "Shutdown this host?";then
       if continue "Really?";then
		ssh $host sudo /sbin/shutdown -hf now
       fi
       fi
fi

if continue "Remove from internal nagios? (second time)";then
echo -n "*** Removing from internal nagios... "
for a in prd stg dev;do
   echo "   *** nagios.$a.gnmedia.net"
   $test ssh -t nagios.$a.gnmedia.net "test -f /etc/nagios/conf.d/${host}.cfg && sudo rm -vf /etc/nagios/conf.d/${host}* && sudo /sbin/service nagios reload; :"
done
echo OK.
fi


if continue "Remove from puppet?";then
echo -n "*** Looking for hostname in the manifests... "
git clone git@git.gnmedia.net:/puppet-manifests
cd puppet-manifests/nodes
git config user.name `whoami`
files=$(grep -rl $host . | grep -v .git)
if test -n "$files" ;then
   ${EDITOR:=vim} -c "/$host" $files
   for a in $files;do   test -s $a || git rm -f $a;done
   git diff
   if continue "Commit changes?" ;then
      git commit -a -m "Decom of $host"
      git push
   fi
   cd ..
else
   echo DNE.
fi
fi

#if continue "Remove from trends?";then
#echo -n "*** Removing from trends... "
#$test ssh app1v-trend.lax1.gnmedia.net sudo rm -rvf /var/lib/collectd/$host
#echo OK.
#fi

if continue "Archive graphite data?";then
echo -n "*** Archiving graphite data... "
   echo "   *** graphite.gnmedia.net"
   $test ssh -t app1v-graphite.tp.prd.lax.gnmedia.net "cd /app/shared/graphite/storage/whisper; sudo tar czf /app/data/archive/${host//./_}-$(date +%Y%m%d%H%M%S).tar.gz ${host//./_} && sudo rm -rf ${host//./_}"
echo OK.
fi
 

if continue "Remove exports from NetApp?";then
echo -n "*** Removing exports from NetApp... "
echo netapp1_nfs; rnetapp netapp1_nfs exports removehost $host
fi


echo
echo "Now go remove..."
echo "Netapp volumes"
echo "and run dnspush"

