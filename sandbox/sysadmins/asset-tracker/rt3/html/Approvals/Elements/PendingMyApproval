%# BEGIN BPS TAGGED BLOCK {{{
%# 
%# COPYRIGHT:
%#  
%# This software is Copyright (c) 1996-2009 Best Practical Solutions, LLC 
%#                                          <jesse@bestpractical.com>
%# 
%# (Except where explicitly superseded by other copyright notices)
%# 
%# 
%# LICENSE:
%# 
%# This work is made available to you under the terms of Version 2 of
%# the GNU General Public License. A copy of that license should have
%# been provided with this software, but in any event can be snarfed
%# from www.gnu.org.
%# 
%# This work is distributed in the hope that it will be useful, but
%# WITHOUT ANY WARRANTY; without even the implied warranty of
%# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
%# General Public License for more details.
%# 
%# You should have received a copy of the GNU General Public License
%# along with this program; if not, write to the Free Software
%# Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA
%# 02110-1301 or visit their web page on the internet at
%# http://www.gnu.org/licenses/old-licenses/gpl-2.0.html.
%# 
%# 
%# CONTRIBUTION SUBMISSION POLICY:
%# 
%# (The following paragraph is not intended to limit the rights granted
%# to you to modify and distribute this software under the terms of
%# the GNU General Public License and is only of importance to you if
%# you choose to contribute your changes and enhancements to the
%# community by submitting them to Best Practical Solutions, LLC.)
%# 
%# By intentionally submitting any modifications, corrections or
%# derivatives to this work, or any other work intended for use with
%# Request Tracker, to Best Practical Solutions, LLC, you confirm that
%# you are the copyright holder for those contributions and you grant
%# Best Practical Solutions,  LLC a nonexclusive, worldwide, irrevocable,
%# royalty-free, perpetual, license to use, copy, create derivative
%# works based on those contributions, and sublicense and distribute
%# those contributions and any derivatives thereof.
%# 
%# END BPS TAGGED BLOCK }}}
<script type="text/javascript"><!--
    onLoadHook('createCalendarLink("CreatedBefore");');
    onLoadHook('createCalendarLink("CreatedAfter");');
--></script>
% my %done;
% foreach ($tickets, $group_tickets) {
%   while (my $ticket = $_->Next() ) {
%     next if !$ARGS{'ShowDependent'} and $ticket->HasUnresolvedDependencies( Type => 'approval' );
%     next if $done{$ticket->Id}++; # don't show duplicate tickets
<& Approve, ticket => $ticket &>
%   }
% }

<&| /Widgets/TitleBox, title => loc("Search for approvals") &>
<input type="checkbox" class="checkbox" value="1" name="ShowPending"
        <%((!$ARGS{'ShowRejected'} && !$ARGS{'ShowResolved'}) ||
         $ARGS{'ShowPending'})
        && "checked"%> /> <&|/l&>Show pending requests</&><br />
<input type="checkbox" class="checkbox" value="1" name="ShowResolved" <%$ARGS{'ShowResolved'} && "checked"%> /> <&|/l&>Show approved requests</&><br />
<input type="checkbox" class="checkbox" value="1" name="ShowRejected" <%$ARGS{'ShowRejected'} && "checked"%> /> <&|/l&>Show denied requests</&><br />
<input type="checkbox" class="checkbox" value="1" name="ShowDependent" <%$ARGS{'ShowDependent'} && "checked"%> /> <&|/l&>Show requests awaiting other approvals</&><br />

<&|/l,"<input size='15' value='".($created_before->Unix > 0 &&$created_before->ISO)."' name='CreatedBefore' id='CreatedBefore' />"&>Only show approvals for requests created before [_1]</&><br />

<&|/l, "<input size='15' value='".( $created_after->Unix >0 && $created_after->ISO)."' name='CreatedAfter' id='CreatedAfter' />"&>Only show approvals for requests created after [_1]</&>
</&>

<%init>
my $tickets = RT::Tickets->new( $session{'CurrentUser'} );
$tickets->LimitOwner( VALUE => $session{'CurrentUser'}->Id );

# also consider AdminCcs as potential approvers.
my $group_tickets = RT::Tickets->new( $session{'CurrentUser'} );
$group_tickets->LimitWatcher( VALUE => $session{'CurrentUser'}->UserObj->EmailAddress, TYPE => 'AdminCc' );

my $created_before = RT::Date->new( $session{'CurrentUser'} );
my $created_after = RT::Date->new( $session{'CurrentUser'} );

foreach ($tickets, $group_tickets) {
    $_->Limit( FIELD      => 'Type', VALUE => 'approval' );

    if ( $ARGS{'ShowResolved'} ) {
	$_->LimitStatus( VALUE => 'resolved' );
    }
    if ( $ARGS{'ShowRejected'} ) {
	$_->LimitStatus( VALUE => 'rejected' );
    }
    if ( $ARGS{'ShowPending'} || ( !$ARGS{'ShowRejected'} && !$ARGS{'Resolved'} ) ) {
	$_->LimitStatus( VALUE => 'open' );
	$_->LimitStatus( VALUE => 'new' );
	$_->LimitStatus( VALUE => 'stalled' );
    }

    if ( $ARGS{'CreatedBefore'} ) {
	$created_before->Set( Format => 'unknown', Value => $ARGS{'CreatedBefore'} );
	$_->LimitCreated( OPERATOR => "<=", VALUE => $created_before->ISO );
    }
    if ( $ARGS{'CreatedAfter'} ) {
	$created_after->Set( Format => 'unknown', Value => $ARGS{'CreatedAfter'} );
	$_->LimitCreated( OPERATOR => ">=", VALUE => $created_after->ISO );
    }
}

</%init>
