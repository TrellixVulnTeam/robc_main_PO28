<?php
class WebsiteAllowedTag extends AppModel {

	var $name = 'WebsiteAllowedTag';

	function get_subcategories_by_website_id($website_id) {
		return $this->get_by_website_id($website_id);
	}

	function get_subcategory_ids_by_website_id($website_id) {
		return $this->get_ids_by_website_id($website_id);
	}

	function get_by_website_id($website_id) {
	    $cache_key = 'get_by_website_id::'.md5("{$website_id}");
	    $tags = $this->memcached_get_json($cache_key);

	    if (0 === $tags) {
	        $conditions = array(
                "website_id" => $website_id,
                "type" => TAG_TYPE_SUBCATEGORY,
                "visible" => 1
	        );

	        $tags = $this->find("all", array("conditions" => $conditions));
	        $this->memcached_set_json($cache_key, $tags, 1 * HOUR);
	    }

	    return $tags;
	}

	public function invalidate_cache_get_by_website_id($website_id) {
		$cache_key = 'get_by_website_id::'.md5("{$website_id}");
	    return $this->memcached_delete($cache_key);
	}

	function get_categories_and_subcategories_by_website_id($website_id) {
		$oKeyGen = new \CI\Memcached\KeyGen($website_id, __METHOD__);
		$cache_key = $oKeyGen->generate();
		$return = $this->memcached_get_json($cache_key);

		if (0 === $return) {
			$query = "SELECT tags.parent as category, tags.id as subcategory FROM website_allowed_tags JOIN tags ON tags.id = tag_id WHERE website_id = $website_id AND website_allowed_tags.type = " . TAG_TYPE_SUBCATEGORY . " AND website_allowed_tags.visible = 1";
			$data = $this->query($query);
			$return = array();
			foreach ($data as $element) {
				$category = $element['tags']['category'];
				$subcategory = $element['tags']['subcategory'];
				if (!isset($return[$category]) || !in_array($subcategory, $return[$category])) {
					$return[$category][] = $subcategory;
				}
			}
			$this->memcached_set_json($cache_key, $return, 900);
		}
		return $return;
	}

	function get_ids_by_website_id($website_id) {
		$tags = $this->get_by_website_id($website_id);

		$ids = array();

		foreach ($tags as $tag) {
			$ids[] = $tag['WebsiteAllowedTag']['tag_id'];
		}

		return $ids;
	}

	function get($website_id, $tag_id) {
		$conditions = array("website_id" => $website_id,
							"tag_id" => $tag_id,
							"visible" => 1
							);

		return $this->find("all", array("conditions" => $conditions));
	}

	function remove($id) {
		$query = "UPDATE website_allowed_tags SET visible = 0 WHERE id = ".$id;

		$this->query($query);
	}

	function remove_subcategory($website_id, $tag_id) {
		$query = "UPDATE website_allowed_tags SET visible = 0 WHERE website_id = ". $website_id ." AND tag_id = ".$tag_id;

		$this->query($query);
	}

	function add($website_id, $tag_id, $type) {
		$this->create();

		$this->data['WebsiteAllowedTag']['type'] = $type;
		$this->data['WebsiteAllowedTag']['website_id'] = $website_id;
		$this->data['WebsiteAllowedTag']['tag_id'] = $tag_id;
		$this->data['WebsiteAllowedTag']['visible'] = 1;

		$this->save($this->data);
	}

	function convert_ids($tags) {
		$out = array();

		foreach ($tags as $tag) {
			$out[] = $tag['WebsiteAllowedTag']['tag_id'];
		}

		return $out;
	}

}
?>