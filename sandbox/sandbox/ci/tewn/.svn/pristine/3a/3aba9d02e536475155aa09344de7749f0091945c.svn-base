<?php

namespace CI\Filter\Url;
use CI\String\Exception as StringException;

class Fixer implements \CI\Filter
{
    /**
     * Filter a url and fix it when is malformed
     *
     * @param string $sValue The value to apply this filter
     *
     * @return string The filtered $sValue
     */
    public function filter($sValue)
    {
        if (false === is_string($sValue)) {
            throw new StringException(StringException::NOT_VALID, gettype($sValue));
        }

        $sValue = urldecode($sValue);
        $aParams = $this->getUrlParams($sValue);

        if (isset($aParams['query'])) {
            $sValue = $this->stripQueryFromUrl($sValue);
            $sQuery = $this->fixQuery($aParams['query']);
            $sValue .= '?' . $sQuery;
        }

        return $sValue;
    }

    /**
     * Get the elements of the url
     *
     * @param string $sUrl Url to get the params from
     *
     * @return array
     */
    protected function getUrlParams($sUrl)
    {
        return parse_url($sUrl);
    }

    /**
     * Fix the query params, replacing the ? for &
     *
     * @param string $sQuery Query to be fixed
     *
     * @return string
     */
    protected function fixQuery($sQuery)
    {
        return str_replace('?', '&', $sQuery);
    }

    /**
     * Strip the query params from the Url
     *
     * @param string $sUrl Url to strip the query from
     *
     * @return string
     */
    protected function stripQueryFromUrl($sUrl)
    {
        return substr($sUrl, 0, strpos($sUrl, '?'));
    }
}