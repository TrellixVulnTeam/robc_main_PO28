<?php

namespace CI\Category;

abstract class DataSource implements \Iterator
{
    protected $aCategories;

    public function __construct()
    {
        $this->init();
    }

    public function getById($nCategoryId)
    {
        $nCategoryId = $nCategoryId;
        if (isset($this->aCategories[$nCategoryId])) {
            return $this->aCategories[$nCategoryId];
        }
        return null;
    }

    public function getByHub($nHubId)
    {
        $aCategories = array();
        foreach ($this->aCategories as $aCategory) {
            if (in_array($nHubId, $aCategory['hubs'])) {
                $aCategories[] = $aCategory;
            }
        }
        return $aCategories;
    }

    public function rewind()
    {
        return reset($this->aCategories);
    }

    public function current()
    {
        return current($this->aCategories);
    }

    public function key()
    {
        return key($this->aCategories);
    }

    public function next()
    {
        return next($this->aCategories);
    }

    public function valid()
    {
        return key($this->aCategories) !== null;
    }

    abstract public function init();
}