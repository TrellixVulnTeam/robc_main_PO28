<?php

namespace CI\Stats\Page;

class Delta extends Adapter
{
    const BY_PAGE    = 0;
    const BY_WEBSITE = 1;

    public function getStats($nPageId, $sStartDate, $sEndDate)
    {
        return $this->_getStats(self::BY_PAGE, $nPageId, $sStartDate, $sEndDate);
    }

    public function getStatsByWebsite($nWebsiteId, $sStartDate, $sEndDate)
    {
        return $this->_getStats(self::BY_WEBSITE, $nWebsiteId, $sStartDate, $sEndDate);
    }

    private function _getStats($nField, $nId, $sStartDate, $sEndDate)
    {
        $oDateFormat = new \CI\Date\Format();
        $nId         = intval($nId);
        $sStartDate  = $oDateFormat->datetime($sStartDate);
        $sEndDate    = $oDateFormat->datetime($sEndDate);
        $nStartDate  = strtotime($sStartDate);
        $nEndDate    = strtotime($sEndDate);
        $sFieldId    = 'page_id';

        if ($nField === self::BY_WEBSITE) {
            $sFieldId = 'website_id';
        }

        $sQuery = "SELECT IFNULL(SUM(impressions), 0) as impressions
            FROM stats_page
            WHERE {$sFieldId} = {$nId}
                AND created BETWEEN {$nStartDate} AND {$nEndDate};";
        $aStats = $this->oModel->query_read($sQuery, false);

        if (is_array($aStats)) {
            // 2 array_shift because of the cake model behaviour
            $aStats = array_shift($aStats);
            $aStats = array_shift($aStats);
        } else {
            $aStats = array('impressions' => 0);
        }

        // we return everything as integer
        return array('impressions' => (int) $aStats['impressions']);
    }
}