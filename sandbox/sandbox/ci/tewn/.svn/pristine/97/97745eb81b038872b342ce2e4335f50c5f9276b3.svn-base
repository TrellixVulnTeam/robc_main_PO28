<?php
use CI\Monitor\Hub;

class MonitorController extends AppController {
    public $name       = 'Monitor';
    public $uses       = array();
    public $components = array('RequestHandler');

    protected $sFormat;
    protected $sStartDate;
    protected $sEndDate;
    protected $aData;

    public function beforeFilter() {
        $aManipulator = new CI\ArrayManipulator($_GET);
        $this->sFormat = $aManipulator->get('format', 'nagios');

        if ($this->sFormat == 'json') {
            Configure::write('debug', 0);
            $this->header('Pragma: no-cache');
            $this->header('Cache-control: no-cache');
            $this->header("Expires: Mon, 26 Jul 1997 05:00:00 GMT");
            $this->header("Content-Type: application/json");
        }

        $sStartDate = $aManipulator->get('start', strtotime('-1 day'));
        if (is_numeric($sStartDate)) {
            $sStartDate = date('Y-m-d H:i', $sStartDate);
        }

        $sEndDate = $aManipulator->get('end', time());
        if (is_numeric($sEndDate)) {
            $sEndDate = date('Y-m-d H:i', $sEndDate);
        }
        $this->sStartDate = $sStartDate;
        $this->sEndDate = $sEndDate;
    }

    public function index() {
        $oHub = new \CI\Hub(new \CI\Hub\DataSource\MyArray());
        $sCSVIds = implode(',', $oHub->getAllActiveIds());

        $oMonitor = new \CI\Monitor\Hub();
        try {
            $this->aData = $oMonitor->getStats($sCSVIds, 'daily', $this->sStartDate, $this->sEndDate);
        } catch(Exception $e) {
            echo $e->getMessage();
            exit;
        }
    }

    public function beforeRender() {
        switch ($this->sFormat) {
            case 'json':
                $sResult = $this->formatJson($this->aData);
                break;
            case 'nagios':
            default:
                $sResult = $this->formatNagios($this->aData);
                break;
        }

        echo $sResult;
        exit;
    }

    private function formatNagios($aData) {
        $sReturn = "
               All: " . $this->aData[CI\Hub::DOMAIN_ID_ALL]['widget_impressions']
                . ' | ' . $this->aData[CI\Hub::DOMAIN_ID_ALL]['ctr']
                . ' | ' . $this->aData[CI\Hub::DOMAIN_ID_ALL]['rr'] . "\n\r"
            . "CI: " . $this->aData[CI\Hub::DOMAIN_ID_CROWD_IGNITE]['widget_impressions']
                . ' | ' . $this->aData[CI\Hub::DOMAIN_ID_CROWD_IGNITE]['ctr']
                . ' | ' . $this->aData[CI\Hub::DOMAIN_ID_CROWD_IGNITE]['rr'] . "\n\r"
            . "GR: " . $this->aData[CI\Hub::DOMAIN_ID_GAME_REVOLUTION]['widget_impressions']
                . ' | ' . $this->aData[CI\Hub::DOMAIN_ID_GAME_REVOLUTION]['ctr']
                . ' | ' . $this->aData[CI\Hub::DOMAIN_ID_GAME_REVOLUTION]['rr'] . "\n\r"
            . "CR: " . $this->aData[CI\Hub::DOMAIN_ID_CRAVE_ONLINE]['widget_impressions']
                . ' | ' . $this->aData[CI\Hub::DOMAIN_ID_CRAVE_ONLINE]['ctr']
                . ' | ' . $this->aData[CI\Hub::DOMAIN_ID_CRAVE_ONLINE]['rr'] . "\n\r"
            . "MT: " . $this->aData[CI\Hub::DOMAIN_ID_MOMTASTIC]['widget_impressions']
                . ' | ' . $this->aData[CI\Hub::DOMAIN_ID_MOMTASTIC]['ctr']
                . ' | ' . $this->aData[CI\Hub::DOMAIN_ID_MOMTASTIC]['rr'] . "\n\r"
            . "tFS: " . $this->aData[CI\Hub::DOMAIN_ID_THEFASHIONSPOT]['widget_impressions']
                . ' | ' . $this->aData[CI\Hub::DOMAIN_ID_THEFASHIONSPOT]['ctr']
                . ' | ' . $this->aData[CI\Hub::DOMAIN_ID_THEFASHIONSPOT]['rr'] . "\n\r"
            . "TH: " . $this->aData[CI\Hub::DOMAIN_ID_TOTALLYHER]['widget_impressions']
                . ' | ' . $this->aData[CI\Hub::DOMAIN_ID_TOTALLYHER]['ctr']
                . ' | ' . $this->aData[CI\Hub::DOMAIN_ID_TOTALLYHER]['rr'] . "\n\r"
            . "News: " . $this->aData[CI\Hub::DOMAIN_ID_NEWS]['widget_impressions']
                . ' | ' . $this->aData[CI\Hub::DOMAIN_ID_NEWS]['ctr']
                . ' | ' . $this->aData[CI\Hub::DOMAIN_ID_NEWS]['rr'] . "\n\r"
            . "ES: " . $this->aData[CI\Hub::DOMAIN_ID_ES]['widget_impressions']
                . ' | ' . $this->aData[CI\Hub::DOMAIN_ID_ES]['ctr']
                . ' | ' . $this->aData[CI\Hub::DOMAIN_ID_ES]['rr'] . "\n\r";
        return trim($sReturn);
    }

    private function formatJson($aData) {
        return json_encode($this->aData);
    }
}