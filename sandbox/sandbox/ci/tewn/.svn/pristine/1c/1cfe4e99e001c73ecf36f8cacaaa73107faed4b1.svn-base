<?php
class PageSubcategory extends AppModel {

    var $name = 'PageSubcategory';

    public function update_by_page_id($page_id, $subcategories)
    {
        $this->query('UPDATE page_subcategories SET visible = 0 WHERE page_id = ' . $page_id);

        if (!empty($subcategories)) {
            $subcategories_tpl = array();
            foreach ($subcategories as $subcategory_id) {
                $subcategories_tpl[] = "({$subcategory_id},{$page_id},unix_timestamp(),1)";
            }

            $query_update = sprintf(
                'INSERT INTO tewn.page_subcategories(tag_id, page_id, created, visible) VALUES %s ON DUPLICATE KEY UPDATE visible = VALUES(visible);',
                implode(',', $subcategories_tpl)
            );

            $this->query($query_update);
        }
    }

    protected function get_by_page_id($page_id)
    {
        $sql = "SELECT PageSubcategory.tag_id, Tag.name
            FROM page_subcategories PageSubcategory
            INNER JOIN tags Tag ON (PageSubcategory.tag_id = Tag.id)
            AND PageSubcategory.visible = 1
            AND PageSubcategory.page_id = " . $page_id;
        return $this->query_read($sql, false);
    }

    public function get_visible_by_page_id($page_id)
    {
        $return = array();
        $subcategories = $this->get_by_page_id($page_id);
        if (!empty($subcategories)) {
            foreach ($subcategories as $subcategory) {
                $return[] = array(
                    'id'   => $subcategory['PageSubcategory']['tag_id'],
                    'name' => $subcategory['Tag']['name'],
                );
            }
        }

        return $return;
    }

    public function get_names_by_page_id($page_id) {
        $subcategories = $this->get_by_page_id($page_id);
        return Set::classicExtract($subcategories, '{n}.Tag.name');
    }

    public function get_ids_by_page_id($page_id) {
        $subcategories = $this->get_by_page_id($page_id);
        return Set::classicExtract($subcategories, '{n}.PageSubcategory.tag_id');
    }
}