<?php
/**
 * Report\Hub File
 *
 * PHP Version 5.3
 *
 * @author   Francisco Gonzalez <francisco.gonzalez@evolvemediallc.com>
 * @license  Evolve Media LLC
 * @link     http://www.crowdignite.com
 */

namespace CI\Report;

/**
 * Report\Hub Class
 *
 * PHP Version 5.3
 *
 * @author   Francisco Gonzalez <francisco.gonzalez@evolvemediallc.com>
 * @license  Evolve Media LLC
 * @link     http://www.crowdignite.com
 */
class Hub extends \CI\Report
{
    const PARAM_HUBS_IDS        = 'hubs_ids';
    const PARAM_GRANULARITY     = 'granularity';

    public function __construct(array $aParams = array())
    {
        $this->setParams($aParams);
        $this->initDateRange();
    }

    public function getData()
    {
        $oHub = $this->getStatsObject();

        $oHub->setHubId($this->getParam(self::PARAM_HUBS_IDS));
        $oHub->setGranularity(self::DAILY);
        $oHub->setStartDate((string) $this->getParam(self::PARAM_START_DATE));
        $oHub->setEndDate((string) $this->getParam(self::PARAM_END_DATE));

        $this->aData = $oHub->getData();

        $this->process();

        return $this->aData;
    }

    protected function getStatsObject()
    {
        return new \CI\Stats\Hub();
    }

    protected function process()
    {
        $nWidgetClicks = $nWidgetImpressions = $nIncoming = $nOutgoing = 0;
        $oHub          = new \CI\Hub(new \CI\Hub\DataSource\MyArray());
        $aHubsList     = array();

        foreach ($this->aData as $aStats) {
            $nWidgetClicks           += (int) $aStats['widget_traffic_from'];
            $nWidgetImpressions      += (int) $aStats['widget_impressions'];
            $nIncoming               += (int) $aStats['traffic_from'];
            $nOutgoing               += (int) $aStats['traffic_to'];
        }

        $aHubs = explode(',', $this->getParam(self::PARAM_HUBS_IDS));

        foreach ($aHubs as $nId) {
            $aHubsList[$nId] = $oHub->fullName($nId);
        }

        $this->aData = array(
            'start_date'         => (string) $this->getParam(self::PARAM_START_DATE),
            'end_date'           => (string) $this->getParam(self::PARAM_END_DATE),
            'widget_clicks'      => $nWidgetClicks,
            'widget_impressions' => $nWidgetImpressions,
            'hubs_list'          => implode(' / ', $aHubsList),
        );

        $this->aData['widget_ctr']  = \CI\Formulas::getCtr($nWidgetImpressions, $nWidgetClicks);
        $this->aData['return_rate'] = \CI\Formulas::getReturnRate($nOutgoing, $nIncoming);
        $this->aData['tpm']         = \CI\Formulas::getTpm($nOutgoing, $nWidgetImpressions);
    }
}
