<?php

require_once 'citools.php';
require_once 'logger/analytic/element/interface.php';
require_once 'logger/analytic/element/abstract.php';
require_once 'logger/analytic/element/ip.php';

class LoggerAnalyticElementIpTest extends PHPUnit_Framework_TestCase
{
	public function testInitialValue()
	{
		$element = new Logger_Analytic_Element_Ip('ip_visitor');
		$this->assertTrue($element->build() === '127.0.0.1');
		$custom_ip = '192.168.10.13';
		$element->registerValue($custom_ip);
		$this->assertTrue($element->build() === $custom_ip);
	}

	public function testIpAddressUserId()
	{
		$_SERVER['REMOTE_ADDR'] = '127.0.0.2';
		$element = new Logger_Analytic_Element_Ip('ip_visitor');
		$this->assertTrue($element->build() === $_SERVER['REMOTE_ADDR']);

		$_SERVER['HTTP_X_FORWARDED_FOR'] = '127.0.0.3';
		$element = new Logger_Analytic_Element_Ip('ip_visitor');
		$this->assertTrue(
			$element->build() === $_SERVER['HTTP_X_FORWARDED_FOR']
		);

		$_SERVER['HTTP_CLIENT_IP'] = '127.0.0.4';
		$element = new Logger_Analytic_Element_Ip('ip_visitor');
		$this->assertTrue($element->build() === $_SERVER['HTTP_CLIENT_IP']);
	}

	public function testFormat()
	{
		$format = array('separator' => '|', 'item' => '[%s]');
		$element = new Logger_Analytic_Element_Ip('ip_visitor', $format);
		$this->assertTrue($element->build() === "[127.0.0.1]");
	}
}