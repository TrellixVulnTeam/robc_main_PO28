<?php

namespace Test\Component;

/**
 * @group Component
 */
class TierTest extends \PHPUnit_Framework_TestCase
{
    /**
     * @dataProvider getUrlRankData
     */
    public function testGetFromUrlShouldReturnRank($sUrl, $nExpectedTier)
    {
        $oTier = new \CI\Component\Tier();

        $this->assertEquals($nExpectedTier, $oTier->getFromUrl($sUrl, new RankServiceFake()));
    }

    /**
     * @dataProvider getRanksData
     */
    public function testGetRankFromShouldReturnRank($nExpectedTier, $nRank)
    {
        $oTier = new \CI\Component\Tier();

        $this->assertEquals($nExpectedTier, $oTier->getValidTier($nRank));
    }

    public function getUrlRankData()
    {
        return array(
            array('a', 1),
            array('b', 2),
            array('c', 3),
        );
    }

    public function getRanksData()
    {
        return array(
            array(1, 1),
            array(2, 2),
            array(3, 3),
            array('n/a', 0),
            array('n/a', 4),
            array('n/a', -1),
        );
    }
}

class RankServiceFake extends \CI\Http\Service\Rank
{
    public function getRank($sUrl)
    {
        $nRank = 0;

        switch ($sUrl) {
            case 'a':
                $nRank = 10000;
                break;
            case 'b':
                $nRank = 30000;
                break;
            default:
                $nRank = 100000;
                break;
        }

        return $nRank;
    }
}