<?php

namespace Test\Stats;
/**
 * @group CI-92
 */
class WebsiteTest extends \PHPUnit_Framework_TestCase
{
    public function testValidateConditionsWhenEverithingIsOk()
    {
        $bExpected = true;
        $oWebsite  = new \Test\Stats\WebsiteMock();
        $oWebsite->setWebsiteId(1);
        $oWebsite->setgranularity('daily');
        $oWebsite->setStartDate('2011-12-01 12:34:00');
        $oWebsite->setEndDate('2012-12-01 12:34:00');
        $bResult = $oWebsite->validateConditions();
        $this->assertEquals($bExpected, $bResult);
    }

    public function testValidateConditionsWhenEverithingIsOkSettingSomeWebsites()
    {
        $bExpected = true;
        $oWebsite  = new \Test\Stats\WebsiteMock();
        $oWebsite->setWebsitesIds(array(1,12,10));
        $oWebsite->setgranularity('daily');
        $oWebsite->setStartDate('2011-12-01 12:34:00');
        $oWebsite->setEndDate('2012-12-01 12:34:00');
        $bResult = $oWebsite->validateConditions();
        $this->assertEquals($bExpected, $bResult);
    }

    public function testValidateConditionsWhenGranularityInvalid()
    {
        $bExpected = false;
        $oWebsite  = new \Test\Stats\WebsiteMock();
        $oWebsite->setWebsitesIds(array(1));
        $oWebsite->setgranularity(1);
        $oWebsite->setStartDate('2011-12-01 12:34:00');
        $oWebsite->setEndDate('2012-12-01 12:34:00');
        $bResult = $oWebsite->validateConditions();
        $this->assertEquals($bExpected, $bResult);
    }

    public function testGetEmptyStats()
    {
        $aExpected = array();
        $oWebsite  = new \Test\Stats\WebsiteMock();
        $aResult   = $oWebsite->getEmptyStats();
        $this->assertEquals($aExpected, $aResult);
    }
}

class WebsiteMock extends \CI\Stats\Website
{
    public function validateConditions()
    {
        return parent::validateConditions();
    }

    public function process()
    {
        return parent::process();
    }
}