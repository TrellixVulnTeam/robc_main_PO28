<?php

class ImageMgmtComponentTestController extends Controller {
	public $components = array('ImageMgmt');
	public $uses = array();
}

class ImageMgmtComponentTestCase extends CakeTestCase {

	private $Controller;

	public function start() {
		$this->Controller = new ImageMgmtComponentTestController();
		$this->Controller->constructClasses();
		$this->Controller->Component->initialize($this->Controller);
		$this->Controller->beforeFilter();
		$this->Controller->Component->startup($this->Controller);
	}

	public function test_paths() {
		//preparing data.
		$upload_dir = $this->Controller->ImageMgmt->paths["upload_dir"];
		//testing if the directory exists.
		$upload_dir_exists = file_exists($upload_dir);
		$expected = true;
		$this->assertEqual($expected, $upload_dir_exists);

		//testing if the directory is writable.
		$permissions_of_upload_dir = (string) substr(sprintf('%o', fileperms($upload_dir)), -4);
		$expected = (string) "0775";
		$this->assertEqual($expected, $permissions_of_upload_dir);
	}

	public function test_download_netpic() {
		/* TEST1: with 2nd param on null. */
		$image_to_download = "http://www.nvidia.com/content/global/global_background.jpg";
		$result = $this->Controller->ImageMgmt->download_netpic($image_to_download, null);

		$file_exists = file_exists($this->Controller->ImageMgmt->paths["images_dir"] . $result);
		$expected = true;
		$this->assertEqual($expected, $file_exists);

		//deleting generated files
		if($file_exists){
			unlink($this->Controller->ImageMgmt->paths["images_dir"] . $result);
		}

		/* TEST2: with 2nd param "test" */
		$image_to_download = "http://www.nvidia.com/content/global/global_background.jpg";
		$result = $this->Controller->ImageMgmt->download_netpic($image_to_download, "test");
		$file_exists = file_exists($this->Controller->ImageMgmt->paths["images_dir"] . $result);
		$expected = true;
		$this->assertEqual($expected, $file_exists);

		//deleting generated files
		if($file_exists){
			unlink($this->Controller->ImageMgmt->paths["images_dir"] . $result);
		}
	}
}