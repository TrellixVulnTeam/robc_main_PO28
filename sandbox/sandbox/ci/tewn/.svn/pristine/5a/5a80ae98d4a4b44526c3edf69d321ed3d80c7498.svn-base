<?php

namespace CI\Chart;

abstract class Cache
{
    protected $oModel = null;

    public function __construct($oModel)
    {
        $this->oModel = $oModel;
    }

    public function getAllStatsFromDate($sDate)
    {
        $sKey = $this->getKeyAllStatsFromDate($sDate);
        return $this->oModel->memcached_get_json($sKey);
    }

    public function setAllStatsFromDate($sDate, $aData)
    {
        $bReturn = false;
        $oDate   = new \CI\Date();

        if (false === $oDate->isToday($sDate)) {
            $sKey    = $this->getKeyAllStatsFromDate($sDate);
            $bReturn = $this->oModel->memcached_set_json($sKey, $aData);
        }

        return $bReturn;
    }

    public function removeAllStatsFromDate($sDate)
    {
        $sKey = $this->getKeyAllStatsFromDate($sDate);
        return $this->oModel->memcached_delete($sKey);
    }

    public function getDomainStatsFromDate($sDate, $nDomainId)
    {
        $sKey = $this->getKeyDomainStatsFromDate($sDate, $nDomainId);
        return $this->oModel->memcached_get_json($sKey);
    }

    public function setDomainStatsFromDate($sDate, $aData, $nDomainId)
    {
        $bReturn = false;
        $oDate   = new \CI\Date();

        if (false === $oDate->isToday($sDate)) {
            $sKey    = $this->getKeyDomainStatsFromDate($sDate, $nDomainId);
            $bReturn = $this->oModel->memcached_set_json($sKey, $aData);
        }

        return $bReturn;
    }

    public function removeDomainStatsFromDate($sDate, $nDomainId)
    {
        $sKey = $this->getKeyDomainStatsFromDate($sDate, $nDomainId);
        return $this->oModel->memcached_delete($sKey);
    }

    public function getStatsFromDate($sDate, $nId)
    {
        $sKey = $this->getKeyStatsFromDate($sDate, $nId);
        return $this->oModel->memcached_get_json($sKey);
    }

    public function setStatsFromDate($sDate, $nId, $aStats)
    {
        $bReturn = false;
        $oDate   = new \CI\Date();

        if (false === $oDate->isToday($sDate)) {
            $sKey    = $this->getKeyStatsFromDate($sDate, $nId);
            $bReturn = $this->oModel->memcached_set_json($sKey, $aStats);
        }

        return $bReturn;
    }

    public function removeStatsFromDate($sDate, $nId)
    {
        $sKey = $this->getKeyStatsFromDate($sDate, $nId);
        return $this->oModel->memcached_delete($sKey);
    }

    abstract protected function getKeyAllStatsFromDate($sDate);
    abstract protected function getKeyDomainStatsFromDate($sDate, $nDomainId);
    abstract protected function getKeyStatsFromDate($nId, $sDate);
}
