<?php

namespace CI\Error;

/**
 * Abstract class Dealer that describe an error dealer which requires a 
 * formatter in order to work and by default will parse the errors to the
 * associated formatter
 */
abstract class Dealer
{
    /**
     * @var \Ci\Error\Formatter;
     */
    protected $oErrorFormatter;

    /**
     * @var string
     */
    protected $sMessage = '';

    /**
     * @param \CI\Error\Formatter $oErrorFormatter
     */
    public function __construct(\CI\Error\Formatter $oErrorFormatter)
    {
        $this->setFormatter($oErrorFormatter);
    }

    /**
     * @param \CI\Error\Formatter $oErrorFormatter
     */
    public function setFormatter(\CI\Error\Formatter $oErrorFormatter)
    {
        $this->oErrorFormatter = $oErrorFormatter;
    }

    /**
     * Deal with the error list and deliver it
     * to the target mechanism.
     *  
     * @param array $aErrors The list of errors to be reported
     *
     * @return void
     */
    public function deal(array $aErrors)
    {
        $this->oErrorFormatter->setErrors($aErrors);
        $this->sMessage = $this->oErrorFormatter->getErrors();
    }
}