<?php

class ConvertHelper extends Helper {

	var $helpers = array('Html');

	/* Status functions */
	function website_status($status) {
		switch ($status) {
		case WEBSITE_STATUS_ACTIVE:
			return "Active";
			break;
		case WEBSITE_STATUS_NEW:
			return "New";
			break;
		case WEBSITE_STATUS_DENIED:
			return "Denied";
			break;
		case WEBSITE_STATUS_SUSPENDED:
			return "Suspended";
			break;
		case WEBSITE_STATUS_PAUSED:
			return "Paused";
			break;
		case WEBSITE_STATUS_INACTIVE:
			return "Inactive";
			break;
		case WEBSITE_STATUS_DOWN:
			return "Down";
			break;
		case WEBSITE_STATUS_TRANSFER:
			return "Transfer";
			break;
		default:
			echo "status: ".$status;
			plat_assert(0);
		}
	}

	function page_status($status) {
		switch ($status) {
		case PAGE_STATUS_APPROVED:
			return "Approved";
			break;
		case PAGE_STATUS_DENIED:
			return "Denied";
			break;
		case PAGE_STATUS_PENDING:
			return "Pending";
			break;
		case PAGE_STATUS_EXPIRED:
			return "Expired";
			break;
		case PAGE_STATUS_DUPLICATE:
			return "Duplicate";
			break;
		case PAGE_STATUS_PAUSED:
			return "Paused";
			break;
		case PAGE_STATUS_PENDING_MODERATION:
			return "Pending Moderation";
			break;
		default:
			echo "status: ".$status;
			plat_assert(0);
		}
	}

	function widget_status($status) {
		switch ($status) {
		case WIDGET_STATUS_ACTIVE:
			return "Active";
			break;
		case WIDGET_STATUS_INACTIVE:
			return "Inactive";
			break;
		case WIDGET_STATUS_DELETED:
			return "Deleted";
			break;
		default:
			plat_assert(0);
		}
	}

	function account_status($status) {
		switch ($status) {
		case ACCOUNT_STATUS_RUNNING:
			return "Active";
			break;
		case ACCOUNT_STATUS_NEW:
			return "New";
			break;
		case ACCOUNT_STATUS_PAUSED:
			return "Paused";
			break;
		case ACCOUNT_STATUS_SUSPENDED:
			return "Suspended";
			break;
		case ACCOUNT_STATUS_DENIED:
			return "Denied";
			break;
		case ACCOUNT_STATUS_TRANSFER:
			return "Transfer";
			break;
		case ACCOUNT_STATUS_DELETED:
			return "Deleted";
			break;
		default:
			plat_assert(0);
		}
	}

	function user_type($user) {
		if ($user['User']['admin']) {
			return "Admin";
		}
		if ($user['User']['premium']) {
			return "Premium";
		}
		return "Basic";
	}

	function link_type($type) {
		switch ($type) {
			case LINK_TYPE_BASIC:
				return "Statistical";
				break;
			case LINK_TYPE_CONTEXTUAL:
				return "Contextual";
				break;
			case LINK_TYPE_SIMILAR:
				return "Similar";
				break;
			case LINK_TYPE_TAG:
				return "Tag";
				break;
			case LINK_TYPE_SUBCATEGORY:
				return "Subcategory";
				break;
			default:
				plat_assert(0);
		}
	}

	function link_key($type, $key, $field = 'id') {
		switch ($type) {
			case LINK_TYPE_BASIC:
				return NULL;
				break;
			case LINK_TYPE_CONTEXTUAL:
			case LINK_TYPE_SIMILAR:
				return $key['Page'][$field];
				/*
				if ($field == 'id') {
					return $key['Page']['id'];
				} else if ($field == 'title') {
					return $key['Page']['title'];
				}
				*/
				break;
			case LINK_TYPE_TAG:
			case LINK_TYPE_SUBCATEGORY:
				return $key['Tag']['name'];
				break;
			default:
				plat_assert(0);
		}

	}

	function link_key_html($type, $key) {
		switch ($type) {
			case LINK_TYPE_CONTEXTUAL:
			case LINK_TYPE_SIMILAR:
				$page_id = $this->link_key($type, $key, 'id');
				$page_title = $this->link_key($type, $key, 'title');
				$page_title = $page_title ? $page_title : $page_id;
				$website_id = $key['Page']['website_id'];
				return '<a href="/pages/moderate/'.$website_id.'/'.$page_id.'">'.$page_title.'</a>';
				break;
			case LINK_TYPE_BASIC:
			case LINK_TYPE_TAG:
			case LINK_TYPE_SUBCATEGORY:
				return $this->link_key($type, $key);
				break;
			default:
				plat_assert(0);
		}
	}

	private function _get($key, $array, $value = '') {
		if (isset($array[$key])) {
			$value = $array[$key];
		}
		return $value;
	}

	/* Demographic Fuctions */
	function category($category_id) {
		return $this->_get($category_id, $this->category_select());
	}

	function category_short($category_id) {
		return $this->_get($category_id, $this->category_select_short());
	}

	function demographic_sex($demographic_sex_id) {
		return $this->_get($demographic_sex_id, $this->demographic_sex_select());
	}

	function content_rating($content_rating_id) {
		return $this->_get($content_rating_id, $this->content_rating_select());
	}

	/* Select functions */
	function demographic_sex_select() {
		return array(
			DEMOGRAPHIC_SEX_FEMALE => "Female",
			DEMOGRAPHIC_SEX_MALE => "Male",
			DEMOGRAPHIC_SEX_BOTH => "Either"
			);
	}

	function category_multi_select($domain_component, $category_component) {
		$all_domain_bits = $domain_component->getAllBits();
		foreach ($all_domain_bits as $domain_bit) {
			$domain_id = $domain_component->bitToId($domain_bit);

			$categories = $category_component->domain($domain_id, $category_component);
			foreach ($categories as $id => $category) {
				$data[$domain_id][$id] = $category;
			}
		}

		return $data;
	}

	function category_domain_select($domain_id, $category_component) {
		$categories = $category_component->domain($domain_id);
		foreach ($categories as $category) {
			$out[$category] = $this->category($category);
		}

		return $out;
	}

	function category_select() {
		return array(
			CATEGORY_ALL => "All",
			CATEGORY_OFFBEAT => "Offbeat",
			CATEGORY_SPORTS => "Sports",
			CATEGORY_GAMING => "Gaming (Video Games)",
			CATEGORY_CASUAL_GAMES => "Casual Games",
			CATEGORY_LIFESTYLE => "Lifestyle",
			CATEGORY_MEDIA => "Media (TV/Movies)",
			CATEGORY_CELEBRITIES => "Celebrities",
			CATEGORY_TECHNOLOGY => "Technology",
			CATEGORY_MENS_ENTERTAINMENT => "Men's Entertainment",
			CATEGORY_BEAUTY => "Beauty",
			CATEGORY_FOOD => "Food/Cooking",
			CATEGORY_PARENTING => "Parenting",
			CATEGORY_DEALS => "Deals",
			CATEGORY_MUSIC => "Music",
			CATEGORY_TRAVEL => "Travel",
			CATEGORY_PETS=> "Pets",
			CATEGORY_HOME => "Home",
			CATEGORY_HEALTH => "Health",
			CATEGORY_DIY => "DIY",
			CATEGORY_OUTDOORS => "Outdoors",
			CATEGORY_ANIME => "Anime",
			CATEGORY_AUTOMOTIVE => "Automotive",
			CATEGORY_URBAN => "Urban",
            CATEGORY_NEWS => "News",
			);
	}

	function category_select_long() {
		return array(
			CATEGORY_GAMING => "Video Games",
			CATEGORY_CASUAL_GAMES => "Casual (flash) Games",
			CATEGORY_MEDIA => "TV/Movies/Comics",
			CATEGORY_OFFBEAT => "Viral/Humor/Oddities",
			CATEGORY_CELEBRITIES => "Celebrity Gossip",
			CATEGORY_LIFESTYLE => "Male Lifestyle",
			CATEGORY_MUSIC => "Music",
			CATEGORY_MENS_ENTERTAINMENT => "Babes",
			CATEGORY_SPORTS => "Sports",
			CATEGORY_TECHNOLOGY => "Technology/Gadgets",
			CATEGORY_BEAUTY => "Fashion/Beauty/Dieting",
			CATEGORY_FOOD => "Food/Cooking",
			CATEGORY_PARENTING => "Parenting",
			CATEGORY_DEALS => "Coupons/Deals/Contests",
			CATEGORY_TRAVEL => "Travel",
			CATEGORY_ALL => "Other",
			CATEGORY_PETS => "Pets/Cute stuff",
			CATEGORY_HOME => "Home/Design",
			CATEGORY_HEALTH => "Health/Fitness",
			CATEGORY_DIY => "DIY/Crafts",
			CATEGORY_OUTDOORS => "Hunting/Fishing/Outdoors",
			CATEGORY_ANIME => "Anime/Manga",
			CATEGORY_AUTOMOTIVE => "Cars/Automotive",
			CATEGORY_URBAN => "Urban",
            CATEGORY_NEWS => "News",
			);

	}

	function category_select_short() {
		return array(
			CATEGORY_ALL => "All",
			CATEGORY_OFFBEAT => "Odd",
			CATEGORY_SPORTS => "Sprts",
			CATEGORY_GAMING => "Gme",
			CATEGORY_LIFESTYLE => "Lfstyl",
			CATEGORY_MEDIA => "Mdia",
			CATEGORY_CELEBRITIES => "Clb",
			CATEGORY_TECHNOLOGY => "Tech",
			CATEGORY_MUSIC => "Musc",
			CATEGORY_TRAVEL => "Trvl",
			CATEGORY_MENS_ENTERTAINMENT => "ME",
			CATEGORY_BEAUTY => "Beuty",
			CATEGORY_FOOD => "Fd",
			CATEGORY_PARENTING => "Parnt",
			CATEGORY_DEALS => "Deal",
			CATEGORY_CASUAL_GAMES => "CGme",
			CATEGORY_PETS => "Pet",
			CATEGORY_HOME => "Hm",
			CATEGORY_HEALTH => "Fit",
			CATEGORY_DIY => "DIY",
			CATEGORY_OUTDOORS => "Outd",
			CATEGORY_ANIME => "Anme",
			CATEGORY_AUTOMOTIVE => "Car",
			CATEGORY_URBAN => "Urbn",
            CATEGORY_NEWS => "Nws",
			);
	}

	function subcategories($subcategories) {
		$out = array();

		foreach ($subcategories as $sub) {
			$out[$sub['Tag']['id']] = $sub['Tag']['name'];
		}

		return $out;
	}

	function content_rating_select() {
		return array(
			WEBSITE_CONTENT_G => "G",
			WEBSITE_CONTENT_PG13 => "PG-13",
			WEBSITE_CONTENT_R => "R",
			WEBSITE_CONTENT_MENS => "Men's Entertainment"
			);
	}

	function domain_name($domain_id) {
		return $this->domain_name_bit(1 << $domain_id);
	}

	function domain_name_bit($domain_bit) {
		switch ($domain_bit) {
		case (1 << DOMAIN_ID_ALL):
			return "All";
		case (1 << DOMAIN_ID_CROWD_IGNITE):
			return "Crowd Ignite";
		case (1 << DOMAIN_ID_RAAZE):
			return "Raaze";
		case (1 << DOMAIN_ID_GAME_REVOLUTION):
			return "Game Revolution";
		case (1 << DOMAIN_ID_CRAVE_ONLINE):
			return "Crave";
		case (1 << DOMAIN_ID_MOMTASTIC):
			return "Momtastic";
		case (1 << DOMAIN_ID_THEFASHIONSPOT):
			return "The Fashion Spot";
		case (1 << DOMAIN_ID_TOTALLYHER):
			return "Totally Her";
        case (1 << DOMAIN_ID_NEWS):
            return "News";
        case (1 << DOMAIN_ID_ES):
            return "EspaÃ±ol";

		default:
			return "Unknown";
		}
	}

	function domain_short_name_bit($domain_bit) {
		switch ($domain_bit) {
		case (1 << DOMAIN_ID_CROWD_IGNITE):
			return "CI";
		case (1 << DOMAIN_ID_RAAZE):
			return "RZ";
		case (1 << DOMAIN_ID_GAME_REVOLUTION):
			return "GR";
		case (1 << DOMAIN_ID_CRAVE_ONLINE):
			return "CR";
		case (1 << DOMAIN_ID_MOMTASTIC):
			return "MT";
		case (1 << DOMAIN_ID_THEFASHIONSPOT):
			return "tFS";
		case (1 << DOMAIN_ID_TOTALLYHER):
			return "TH";
        case (1 << DOMAIN_ID_NEWS):
            return "NW";
        case (1 << DOMAIN_ID_ES):
            return "ES";


		default:
			return "Unknown";
		}
	}

	function domain_select() {
		$oHub = new \CI\Hub(new \CI\Hub\DataSource\MyArray());
		return $oHub->getAllActiveHubsShortName();
	}

	function domain_bit_select() {
		global $all_domains;

		$out = array(
			     (1 << DOMAIN_ID_CROWD_IGNITE) => "Crowd Ignite",
			     (1 << DOMAIN_ID_RAAZE) => "Raaze",
			     (1 << DOMAIN_ID_GAME_REVOLUTION) => "Game Revolution",
			     (1 << DOMAIN_ID_CRAVE_ONLINE) => "Crave Online",
			     (1 << DOMAIN_ID_MOMTASTIC) => "Momtastic",
			     (1 << DOMAIN_ID_THEFASHIONSPOT) => "The Fashion Spot",
			     (1 << DOMAIN_ID_TOTALLYHER) => "Totally Her",
                 (1 << DOMAIN_ID_NEWS) => "News",
                 (1 << DOMAIN_ID_ES) => "EspaÃ±ol",
			);

		return $out;
	}

	function get_website_name($website) {
		if (isset($website['Website']['name']) && $website['Website']['name'] != "") {
			return $website['Website']['name'];
		} else {
			return $website['Website']['url'];
		}
	}

	function needs_attention($att_in, $att_check, $style_match, $style_no_match) {
		if ($att_in & $att_check) {
			return $style_match;
		} else {
			return $style_no_match;
		}
	}

	function format_date($date) {
		return date("m-d-Y G:i", strtotime($date));
	}

	function outbound_tracker($link) {
		return "recordOutboundLink(this, 'Outbound Links', '".$link."');";
	}

	function user_flagged_websites($user, $website_id){
		$user_flagged_websites = $user['flagged_websites'];
		$decoded = json_decode($user_flagged_websites);
		$flagged_websites = (array) $decoded;
		$user_id = $user['id'];

		if(in_array($website_id, $flagged_websites)){
			echo "<a id=\"flag_website_link\" href=\"#\" onclick=\"unflag_website(".$website_id.", ".$user_id.")\">
					<img src='/img/crowdignite/icon_flag_red.png' width=\"16\" height=\"16\" alt=\"Unflag this Website\">
				</a>";
		}else{
			echo "<a id=\"flag_website_link\" href=\"#\" onclick=\"flag_website(".$website_id.", ".$user_id.")\">
					<img src='/img/crowdignite/icon_flag_off.png' width=\"16\" height=\"16\" alt=\"Flag this Website\">
				</a>";
		}

	}

	function round_nice($n) {
		// first strip any formatting;
		$n = (0+str_replace(",","",$n));

		// is this a number?
		if(!is_numeric($n)) return false;

		// now filter it;
		if ($n > 1000000000000) return round(($n/1000000000000),1).'t';
		else if ($n > 1000000000) return round(($n/1000000000),1).'b';
		else if ($n > 1000000) return round(($n/1000000),1).'m';
		else if ($n > 1000) return round(($n/1000),1).'k';

		return number_format($n);
	}
}
?>
