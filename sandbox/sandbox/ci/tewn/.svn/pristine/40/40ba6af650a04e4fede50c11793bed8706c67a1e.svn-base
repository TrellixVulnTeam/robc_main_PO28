<?php

namespace Test\Http;

/**
 * @group Http
 * @group Referer
 */
class RefererTest extends \PHPUnit_Framework_TestCase
{
    /**
     * @dataProvider getCorrectUtmData
     */
    public function testGetUtmSourceRefererCorrect($sHttpReferer)
    {
        $sExpected = 'this_source_text';
        $oRefererMock = new RefererMock('HTTP_REFERER', $sHttpReferer);
        $sResult = $oRefererMock->getUtmSourceReferer();

        $this->assertEquals($sExpected, $sResult);
    }

    /**
     * @dataProvider getCorrectUtmData
     */
    public function testGetUtmCampaingRefererCorrect($sHttpReferer)
    {
        $sExpected = 'this_campaing_text';
        $oRefererMock = new RefererMock('HTTP_REFERER', $sHttpReferer);
        $sResult = $oRefererMock->getUtmCampaignReferer();

        $this->assertEquals($sExpected, $sResult);
    }

    /**
     * @dataProvider getCorrectUtmData
     */
    public function testGetUtmMediumRefererCorrect($sHttpReferer)
    {
        $sExpected = 'this_medium_text';
        $oRefererMock = new RefererMock('HTTP_REFERER', $sHttpReferer);
        $sResult = $oRefererMock->getUtmMediumReferer();

        $this->assertEquals($sExpected, $sResult);
    }

    /**
     * @dataProvider getIncorrectUtmData
     */
    public function testGetUtmSourceRefererIncorrect($sHttpReferer)
    {
        $sExpected = '';
        $oRefererMock = new RefererMock('HTTP_REFERER', $sHttpReferer);
        $sResult = $oRefererMock->getUtmSourceReferer();

        $this->assertEquals($sExpected, $sResult);
    }

    /**
     * @dataProvider getIncorrectUtmData
     */
    public function testGetUtmCampaingRefererIncorrect($sHttpReferer)
    {
        $sExpected = '';
        $oRefererMock = new RefererMock('HTTP_REFERER', $sHttpReferer);
        $sResult = $oRefererMock->getUtmCampaignReferer();

        $this->assertEquals($sExpected, $sResult);
    }

    /**
     * @dataProvider getIncorrectUtmData
     */
    public function testGetUtmMediumRefererIncorrect($sHttpReferer)
    {
        $sExpected = '';
        $oRefererMock = new RefererMock('HTTP_REFERER', $sHttpReferer);
        $sResult = $oRefererMock->getUtmMediumReferer();

        $this->assertEquals($sExpected, $sResult);
    }

    public function getCorrectUtmData()
    {
        return array(array(
            'http://www.example.com/?utm_source=this_source_text&'.
            'utm_campaign=this_campaing_text&utm_medium=this_medium_text'
        ));
    }

    public function getIncorrectUtmData()
    {
        return array(array(
            'http://www.example.com/'
        ));
    }

}

class RefererMock extends \CI\Http\Referer
{

    public function __construct($sName, $sValue)
    {
        $this->oHttpServer = new \Test\Http\ServerMock($sName, $sValue);
        parent::__construct();
    }
}