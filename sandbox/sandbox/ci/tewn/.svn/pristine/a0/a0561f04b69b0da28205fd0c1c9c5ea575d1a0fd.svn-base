<?php

namespace CI\Error\Formatter;

/**
 * Strategy class to output an error backtrace in an HTML format
 */
class HTML implements \CI\Error\Formatter
{
    /**
     * @var array
     */
    protected $sErrors;

    /**
     * @see \Ci\Error\Formatter::getErrors()
     */
    function getErrors()
    {
        $sOutput = "<table>";

        foreach ($this->sErrors as $sError) {
            $i = 0;
            $sOutput .= "<tr><td>Number of errors</td><td>"
                .$sError['occurrences']."</td></tr>";

            $sOutput .= sprintf("<tr><td>URLs:</td><td> %s </td></tr>", $this->get($sError['url'], 'None'));
            $sOutput .= sprintf("<tr><td>Referer:</td><td> %s </td></tr>", $this->get($sError['referer'], 'None'));
            $sOutput .= "<tr><td>PID</td><td>".$sError['pid']."</td></tr>";
            $sOutput .= "<tr><td>Server</td><td>".$sError['server']."</td></tr>";
            $sOutput .= "<tr><td>IP</td><td>".$sError['ip']."</td></tr>";

            foreach ($sError['backtrace'] as $aBacktraceError) {

                $sOutput .= "<tr><td width=10>";
                $sOutput .= "#".(++$i)."&nbsp;&nbsp;&nbsp;</td><td>";
                $sOutput .= isset($aBacktraceError['function'])? $aBacktraceError['function'] : '';

                $sOutput .= "(";

                // @codeCoverageIgnoreStart
                if (0 && is_array($aBacktraceError['args'])) {
                    $sOutput .= "Array";
                } else {
                    if (!empty($aBacktraceError['args']) && is_string($aBacktraceError['args'][0]) ) {
                        $sOutput .= ".";
                    }
                }
                // @codeCoverageIgnoreEnd

                $sOutput .= ")</td><td>";

                if (isset($aBacktraceError['function'])
                    && $aBacktraceError['function'] !== 'query'
                ) {
                    $sOutput .= $aBacktraceError['file']." (Line: "
                        .$aBacktraceError['line'].")</td>";
                }
                $sOutput .= "\n</tr>";
            }

            $sError['args'] = (isset($sError['args'])) ? $sError['args'] : '';
            $sOutput .= "\n\n<td>Arguments: </td><td>" . print_r($sError['args'], true) . '</td>';
        }

        $sOutput .= "</table>";

        return $sOutput;
    }

    /**
     * @see \CI\Error\Formatter::setErrors()
     */
    public function setErrors(array $sErrors)
    {
        $this->sErrors = $sErrors;
    }

    /**
     * Check if a value exist and it's not empty and return it, otherwise
     * return default value.
     * TODO: This will be replaced soon with a default array class(work in progress)
     *
     * @param  mixed $value
     * @param  mixed $defaultValue
     *
     * @return mixed
     */
    protected function get($value, $defaultValue)
    {
        if (isset($value) && !empty($value)) {
            return $value;
        }
        return $defaultValue;
    }
}