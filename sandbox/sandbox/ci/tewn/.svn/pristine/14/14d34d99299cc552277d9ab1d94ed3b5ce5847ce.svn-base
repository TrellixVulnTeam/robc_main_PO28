<?php

class DATABASE_CONFIG {

    /**
     * Constructs the databases configurations depending on
     * the environment of the system
     */
    function __construct() {
        // get the database environment configuration
        $oConfig = new \CI\Config();
        $db_config = $oConfig->get("database_environment");
        if (defined('APP_SERVER') && APP_SERVER) {
            $this->default            = $db_config['app']['write'];
            $this->default_slave      = $db_config['app']['read'];
            $this->audit_server       = $db_config['app']['audit']['write'];
            $this->audit_server_slave = $db_config['app']['audit']['read'];
            $this->warehouse          = $db_config['app']['warehouse']['write'];
            $this->warehouse_slave    = $db_config['app']['warehouse']['read'];
        } elseif (defined('ENGINE_SERVER') && ENGINE_SERVER) {
            $this->default            = $db_config['eng']['write'];
            $this->default_slave      = $db_config['eng']['read'];
            $this->audit_server       = $db_config['eng']['audit']['write'];
            $this->audit_server_slave = $db_config['eng']['audit']['read'];
            $this->warehouse          = $db_config['eng']['warehouse']['write'];
            $this->warehouse_slave    = $db_config['eng']['warehouse']['read'];
        } elseif (defined('MGMT_SERVER') && MGMT_SERVER) {
            $this->default            = $db_config['mgmt']['write'];
            $this->default_slave      = $db_config['mgmt']['read'];
            $this->audit_server       = $db_config['mgmt']['audit']['write'];
            $this->audit_server_slave = $db_config['mgmt']['audit']['read'];
            $this->warehouse          = $db_config['mgmt']['warehouse']['write'];
            $this->warehouse_slave    = $db_config['mgmt']['warehouse']['read'];
        }else {
            // using old connection (in case something went wrong with the global_defines configuration).
            plat_assert(false, 'this $server_name trying to take the old connection (PRD environment), take a look at the global_defines.', true);
        }

        // Change the database configurations if unit testing
        if (Configure::read('unit_test')) {
            $this->test = $db_config['test'];
            /* set the default write database to the slave database
               just to prevent when unit testing just to give read
               permissions to import tables on fixtures */
            $this->default            = $this->default_slave;
            $this->default_slave      = $this->test;

            $this->audit_server       =  $this->audit_server_slave;
            $this->audit_server_slave =  $this->test;

            $this->warehouse          = $this->warehouse_slave;
            $this->warehouse_slave    = $this->test;
        }
    }

    /**
     * Mantain the compatibility constructor with PHP4
     */
    function DATABASE_CONFIG() {
        $this->__construct();
    }
}
?>
