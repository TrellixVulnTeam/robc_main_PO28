<?php

require_once 'logger/storage/interface.php';
require_once 'logger/storage/abstract.php';
require_once 'logger/storage/kestrel.php';

class LoggerStorageKestrelTest extends PHPUnit_Framework_TestCase
{
    private $_config = array();

    public function setUp()
    {
        $this->_config = array('queue' => 'logger_storage_kestrel_test');
    }

    public function testStringHostConfig()
    {
        $this->_config['servers'] = array('kes1v-ci.ci.dev.lax.gnmedia.net');
        $logger = new Logger_Storage_Kestrel($this->_config);
        $this->assertTrue($logger->save('hello world'));
    }

    public function testArrayHostConfig()
    {
        $this->_config['servers'] = array(
            array('kes1v-ci.ci.dev.lax.gnmedia.net')
        );
        $logger = new Logger_Storage_Kestrel($this->_config);
        $this->assertTrue($logger->save('hello world'));
    }

    public function testArrayHostPortConfig()
    {
        $this->_config['servers'] = array(
            array('kes1v-ci.ci.dev.lax.gnmedia.net', 22133)
        );
        $logger = new Logger_Storage_Kestrel($this->_config);
        $this->assertTrue($logger->save('hello world'));
    }

    public function testMultipleServers()
    {
        $this->_config['servers'] = array(
            'kes1v-ci.ci.dev.lax.gnmedia.net',
            'kes1v-ci.ci.dev.lax.gnmedia.net',
            'kes1v-ci.ci.dev.lax.gnmedia.net',
        );
        $logger = new Logger_Storage_Kestrel($this->_config);
        $this->assertTrue($logger->save('Server1'));
        $this->assertTrue($logger->save('Server2'));
        $this->assertTrue($logger->save('Server3'));
    }

    public function testOptionsConfig()
    {
        $this->_config['servers'] = array('kes1v-ci.ci.dev.lax.gnmedia.net');
        $this->_config['options'] = array(Memcached::OPT_RETRY_TIMEOUT => 1);
        $logger = new Logger_Storage_Kestrel($this->_config);
        $this->assertTrue($logger->save('hello world'));
    }
}