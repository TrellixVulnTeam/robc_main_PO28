<?php
class LandingPageRebalance extends AppModel {

	var $name = 'LandingPageRebalance';

	function impressions($intersect, $domain_bitfield = DOMAIN_BIT) {
		$conditions = array(
			"domain_bitfield & ".$domain_bitfield,
			"category" => $intersect['category'],
			"demographic_sex" => $intersect['demographic_sex'],
			"content_rating" => $intersect['content_rating'],
			"visible" => true
			);

		$rc = $this->find("first", array("conditions" => $conditions));

		if (empty($rc)) {
			$this->initialize($intersect, $domain_bitfield);
			return 0;
		}

		return $rc['LandingPageRebalance']['num_display'];
	}

	function initialize($intersect, $domain_bitfield = DOMAIN_BIT) {
		$this->create();

		$data['LandingPageRebalance'] = array(
			"domain_bitfield" => $domain_bitfield,
			"category" => $intersect['category'],
			"demographic_sex" => $intersect['demographic_sex'],
			"content_rating" => $intersect['content_rating'],
			"num_display" => 0,
			"visible" => true
			);

		$this->save($data);
	}

	function reset($intersect, $domain_bitfield = DOMAIN_BIT) {
		$conditions = array(
			"domain_bitfield & ".$domain_bitfield,
			"category" => $intersect['category'],
			"demographic_sex" => $intersect['demographic_sex'],
			"content_rating" => $intersect['content_rating'],
			"visible" => true
			);

		$rebalance = $this->find("first", array("conditions" => $conditions));
		plat_assert($rebalance, print_r($conditions, 1));

		$this->id = $rebalance['LandingPageRebalance']['id'];

		$this->saveField("num_display", 0);
	}

	function increment($intersect, $domain_bitfield, $count) {

		$conditions = "category = '".$intersect['category']."'";
		$conditions .= " AND demographic_sex = '".$intersect['demographic_sex']."'";
		$conditions .= " AND content_rating = '".$intersect['content_rating']."'";
		$conditions .= " AND domain_bitfield & '".$domain_bitfield."'";

		$query = "UPDATE landing_page_rebalances SET num_display = num_display + ".$count." WHERE ".$conditions;

		return $this->query($query);
	}

	function top_impressions_domain($domain_bitfield = DOMAIN_BIT) {
		$conditions = array(
			"domain_bitfield & ".$domain_bitfield,
			"visible" => 1
			);

		$intersect = $this->find("first", array("conditions" => $conditions,
												"order" => "num_display DESC"
												));

		return $intersect['LandingPageRebalance']['num_display'];
	}

	function max_count() {
		$conditions = array("visible" => 1);

		$lpr = $this->find("all", array("conditions" => $conditions,
			"limit" => 1,
			"order" => "num_display DESC"
			));

		return $lpr[0]['LandingPageRebalance']['num_display'];
	}
}
?>
