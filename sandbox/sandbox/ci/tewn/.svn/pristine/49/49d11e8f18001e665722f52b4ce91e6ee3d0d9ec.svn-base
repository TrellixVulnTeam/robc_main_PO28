<?php

include_once (ROOT . DS . APP_DIR . DS . "global_defines.php");
include_once (ROOT . DS . APP_DIR . DS . "controllers/engine_controller.php");

/*
 * Process new pages and get them into circulation quickly
 */

class PageNewEngineController extends EngineController {

	var $name = 'PageNewEngine';

	var $uses = array('Page', 'WidgetAnalytic', 'LandingPageAnalytic', 'Website', 'Setting');
	var $components = array('Timer', 'Domain', 'Date', 'Rule', 'Intersects');
	var $layout = "none";
	var $accounts_lp = NULL;
	var $accounts_widget = NULL;
	var $debug = 1;

	function beforeFilter() {
		/* Widget Engine */
		App::import('Controller', 'WidgetEngine');
		global $WidgetEngine;
		$WidgetEngine = new WidgetEngineController;
		$WidgetEngine->constructClasses();

		/* Landing Page Engine */
		App::import('Controller', 'LandingPageEngine');
		global $LandingPageEngine;
		$LandingPageEngine = new LandingPageEngineController;
		$LandingPageEngine->constructClasses();
	}

	function timer_start() {
		$this->Timer->start(TIMER_PAGE_NEW_QUEUE);
		set_time_limit(TIME_LIMIT_PAGE_NEW_QUEUE);
		ini_set('memory_limit', MEMORY_LIMIT_PAGE_NEW_QUEUE.'M');
	}

	function timer_stop() {
		$data = $this->Timer->set_memory_limit();
		$this->Timer->stop_save($data);
	}

	function batch_data($pages, $page_id) {
		if ($page_id) {
			$pages[] = $page_id;
		}

		return $pages;
	}

	function save_item($index, $page_id) {
		global $LandingPageEngine;
		global $WidgetEngine;

		/* Add into landing pages */
		$LandingPageEngine->landing_pages_add($page_id);

		/* Add into widgets */
		$WidgetEngine->widgets_add($page_id);
	}

	function test() {
		$this->autoRender = false;

		ini_set('memory_limit', MEMORY_LIMIT_PAGE_NEW_QUEUE.'M');

		$this->save_item(NULL, 394775950);
	}

	function index() {
		$this->layout = "none";
		Configure::write('queue_kestrel', 0);
		$this->process_queues("new_page");
	}

	function process_new_pages($instance = 1) {
		$this->autoRender = false;
		$this->layout = "none";
		$this->process_queues("new_page");
	}
}
?>
