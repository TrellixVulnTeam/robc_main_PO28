<?php
/**
 * Logger Storage Abstract
 *
 * PHP Version 5.3
 *
 * @category Logger
 * @package  Logger_Storage
 * @author   Ulises Acosta <ulises.acosta@evolvemediallc.com>
 * @license  Evolve Media LLC
 * @link     http://crowdignite.com
 */
require_once LIBRARY_DIR . 'logger/storage/interface.php';
/**
 * Logger Storage Abstract
 *
 * PHP Version 5.3
 *
 * @category Logger
 * @package  Logger_Storage
 * @author   Ulises Acosta <ulises.acosta@evolvemediallc.com>
 * @license  Evolve Media LLC
 * @link     http://crowdignite.com
 */
abstract class Logger_Storage_Abstract implements Logger_Storage_Interface
{
    /**
     * Configuration options
     * @var array
     */
    protected $config = array();

    /**
     * Default configuration options
     * @var array
     */
    protected $defaultConfig = array();

    /**
     * Construct a logger storage with custom config options
     *
     * @param array $config Configuration options
     */
    public function __construct(array $config = array())
    {
        $this->setUp($config);
        $this->init();
    }

    /**
     * Initialize the Storage
     *
     * @return void
     */
    abstract protected function init();

    /**
     * Set up the custom configuration options
     *
     * @param array $config Configuration options
     *
     * @return void
     */
    protected function setUp(array $config)
    {
        foreach ($this->defaultConfig as $key => $value) {
            if (!isset($config[$key])) {
                $config[$key] = $value;
            }
        }
        $this->config = $config;
    }
}