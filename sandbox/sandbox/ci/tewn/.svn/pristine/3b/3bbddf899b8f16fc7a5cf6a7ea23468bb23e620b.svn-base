<?php
class CPCCampaign extends AppModel {
    public $name     = 'CPCCampaign';
    public $useTable = 'cpc_campaign';

    public $validate = array(
        'website_id' => array(
            'rule'    => 'notEmpty',
            'message' => 'The website id is required',
        ),
        'title' => array(
            'rule'    => 'notEmpty',
            'message' => 'Please enter at least one character for the name of the campaign',
        ),
        'daily_budget' => array(
            'rule'    => array('numeric'),
            'message' => 'Please enter a proper value for the budget',
        ),
        'click_budget' => array(
            'rule'    => array('numeric'),
            'message' => 'Please enter a proper value for the CPC',
        ),
    );

    public function clear_cache($campaign_id)
    {
        $key = $this->get_cache_key($campaign_id);

        return $this->memcached_delete($key);
    }

    public function set_cache($campaign)
    {
        $key = $this->get_cache_key($campaign['id']);

        return $this->memcached_set_json($key, $campaign, 24 * HOURS);
    }

    public function get_cache($campaign_id)
    {
        $key = $this->get_cache_key($campaign_id);

        return $this->memcached_get_json($key);
    }

    private function get_cache_key($campaign_id)
    {
        $oKeyGen = new \CI\Memcached\KeyGen($campaign_id, 'cpc_campaign', 1);

        return $oKeyGen->generate();
    }

    public function get_campaign_ids($day = null)
    {
        $now = date('Y-m-d H:i:s');
        if (empty($day)) {
            $day = date('Y-m-d 00:00:00', time());
        }
        return $this->find(
            'list',
            array(
                'fields' => array('id'),
                'conditions' => array(
                    'OR' => array(
                        'status' => CPC_CAMPAIGN_STATUS_ACTIVE,
                        'AND' => array(
                            'status'             => CPC_CAMPAIGN_STATUS_OVER_DAILY_BUDGET,
                            'date_overbudget <>' => $day,
                        )
                    ),
                    'third_party' => '',
                    'start_date <=' => $now,
                )
            )
        );
    }

    public function get_third_party_campaigns($fields, $all_already_viewed_campagins = array())
    {
        $now = date('Y-m-d H:i:s');

        if (!is_array($fields)) {
            $fields = array('*');
        }

        if (empty($all_already_viewed_campagins)) {
            $all_already_viewed_campagins = 0;
        }

        return $this->find(
            'all',
            array(
                'fields' => array('id', 'click_budget', 'third_party'),
                'conditions' => array(
                    'status' => CPC_CAMPAIGN_STATUS_ACTIVE,
                    'NOT' => array(
                        'id'=> $all_already_viewed_campagins
                    ),
                    'third_party <>' => '',
                    'start_date <=' => $now,
                )
            )
        );
    }
}
?>