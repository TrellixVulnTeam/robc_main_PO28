<?php
/* SVN FILE: $Id$ */
/**
 * Short description for file.
 *
 * In this file, you set up routes to your controllers and their actions.
 * Routes are very important mechanism that allows you to freely connect
 * different urls to chosen controllers and their actions (functions).
 *
 * PHP versions 4 and 5
 *
 * CakePHP(tm) :  Rapid Development Framework (http://www.cakephp.org)
 * Copyright 2005-2010, Cake Software Foundation, Inc. (http://www.cakefoundation.org)
 *
 * Licensed under The MIT License
 * Redistributions of files must retain the above copyright notice.
 *
 * @filesource
 * @copyright     Copyright 2005-2010, Cake Software Foundation, Inc. (http://www.cakefoundation.org)
 * @link          http://www.cakefoundation.org/projects/info/cakephp CakePHP(tm) Project
 * @package       cake
 * @subpackage    cake.app.config
 * @since         CakePHP(tm) v 0.2.9
 * @version       $Revision$
 * @modifiedby    $LastChangedBy$
 * @lastmodified  $Date$
 * @license       http://www.opensource.org/licenses/mit-license.php The MIT License
 */
/**
 * Here, we are connecting '/' (base path) to controller called 'Pages',
 * its action called 'display', and we pass a param to select the view file
 * to use (in this case, /app/views/pages/home.ctp)...
 */
	Router::connect('/widgets/create/*', array('controller' => 'widgets', 'action' => 'create'));
	Router::connect('/widgets/test/*', array('controller' => 'widgets', 'action' => 'test'));
	Router::connect('/widgets/delete/*', array('controller' => 'widgets', 'action' => 'delete'));
	Router::connect('/widgets/best/*', array('controller' => 'widgets', 'action' => 'pop'));
	Router::connect('/widgets/process_status', array('controller' => 'widgets', 'action' => 'process_status'));
    Router::connect('/widgets/action/:action', array('controller' => 'widgets_actions'));
	Router::connect('/widgets/*', array('controller' => 'widgets', 'action' => 'index'));
	Router::connect('/preview/:link/:widget_id', array('controller' => 'landing_page', 'action' => 'index'), array("link" => "[0-9a-z_]+", "widget_id" => "[0-9]+"));
	Router::connect('/link/:link/:intersect', array('controller' => 'pages', 'action' => 'link'), array("link" => "[0-9a-z_]+", "intersect" => "[0-9]+"));
	Router::connect('/link/:link/:intersect/:analytic_id', array('controller' => 'pages', 'action' => 'link'), array("link" => "[0-9a-z_]+", "intersect" => "[0-9]+", "analytic_id" => "[0-9]+"));
	Router::connect('/link/:link/:intersect/:analytic_id/:widget_analytic_id', array('controller' => 'pages', 'action' => 'link'), array("link" => "[0-9a-z_]+", "intersect" => "[0-9]+", "analytic_id" => "[0-9]+", "widget_analytic_id" => "[0-9]+"));
	Router::connect('/link/:link/:intersect/:analytic_id/:widget_analytic_id/:paid_link/:campaign_id', array('controller' => 'pages', 'action' => 'link'), array("link" => "[0-9a-z_]+", "intersect" => "[0-9]+", "analytic_id" => "[0-9]+", "widget_analytic_id" => "[0-9]+", "paid_link" => "[0-1]{1}", "campaign_id" => "[0-9]+"));
	Router::connect('/link/:link/:intersect/:analytic_id/:paid_link/:campaign_id', array('controller' => 'pages', 'action' => 'link'), array("link" => "[0-9a-z_]+", "intersect" => "[0-9]+", "analytic_id" => "[0-9]+", "paid_link" => "[0-1]{1}", "campaign_id" => "[0-9]+"));
	Router::connect('/v/*', array('controller' => 'landing_page', 'action' => 'index'));
	Router::connect('/within/*', array('controller' => 'landing_page', 'action' => 'within'));
	Router::connect('/view/*', array('controller' => 'pages', 'action' => 'link'));
	Router::connect('/', array('controller' => 'landing_page', 'action' => 'homepage', 'top'));
	Router::connect('/top/*', array('controller' => 'landing_page', 'action' => 'homepage', 'top'));
	Router::connect('/newest/*', array('controller' => 'landing_page', 'action' => 'homepage', 'newest'));
	Router::connect('/random/*', array('controller' => 'landing_page', 'action' => 'homepage', 'random'));
	Router::connect('/popular/*', array('controller' => 'landing_page', 'action' => 'homepage', 'popular'));
	Router::connect('/webmasters', array('controller' => 'static', 'action' => 'webmasters'));
	Router::connect('/advertise', array('controller' => 'static', 'action' => 'advertise'));
	Router::connect('/beta', array('controller' => 'static', 'action' => 'beta'));
	Router::connect('/login', array('controller' => 'users', 'action' => 'login'));
	Router::connect('/logout', array('controller' => 'users', 'action' => 'logout'));
	Router::connect('/privacy', array('controller' => 'static', 'action' => 'privacy'));
	Router::connect('/terms', array('controller' => 'static', 'action' => 'terms'));
	Router::connect('/help', array('controller' => 'static', 'action' => 'help'));
	Router::connect('/cookies', array('controller' => 'static', 'action' => 'cookies'));
	Router::connect('/thirdparty', array('controller' => 'static', 'action' => 'thirdparty'));
	Router::connect('/account/*', array('controller' => 'accounts', 'action' => 'create'));
        /* Sitemap */
	Router::connect('/sitemap.xml', array('controller' => 'sitemaps', 'action' => 'index'));
	Router::connect('/sitemap', array('controller' => 'sitemaps', 'action' => 'index'));
	Router::connect('/sitemap/:action/*', array('controller' => 'sitemaps'));
	Router::connect('/robots/:action/*', array('controller' => 'sitemaps', 'action' => 'robot'));
	Router::connect('/crossdomain/:action/*', array('controller' => 'static'));
	Router::connect('/crossdomain.xml', array('controller' => 'static', 'action' => 'crossdomain'));
	Router::parseExtensions('txt', 'xml');

	Router::connect('/demo/*', array('controller' => 'accounts', 'action' => 'create'));
	Router::connect('/paypal/*', array('controller' => 'accounts', 'action' => 'paypal'));
	Router::connect('/rss', array('controller' => 'landing_page', 'action' => 'rss'));
	Router::connect('/sampleranker', array('controller' => 'landing_page', 'action' => 'ranker'));
	Router::connect('/version', array('controller' => 'pages', 'action' => 'version'));
	Router::connect('/landing_page_split_test', array('controller' => 'static', 'action' => 'landing_page_split_test'));
	Router::connect('/gamerevolution/*', array('controller' => 'static', 'action' => 'gamerevolution'));
	Router::connect('/craveonline/*', array('controller' => 'static', 'action' => 'craveonline'));
    Router::connect('/dashboard', array('controller' => 'dashboard', 'action' => 'index'));
	Router::connect('/admin/:action/', array('controller' => 'admin'));
	Router::connect('/ranker', array('controller' => 'ranker', 'action' => 'index'));
	Router::connect('/similar_engine', array('controller' => 'similar_engine', 'action' => 'index'));
	Router::connect('/widget_engine', array('controller' => 'widget_engine', 'action' => 'index'));
	Router::connect('/landing_page_engine', array('controller' => 'landing_page_engine', 'action' => 'index'));
	Router::connect('/accounts', array('controller' => 'accounts', 'action' => 'index'));
	Router::connect('/management', array('controller' => 'management', 'action' => 'index'));
	Router::connect('/video', array('controller' => 'static', 'action' => 'video'));

	Router::connect('/mail/rejected', array('controller' => 'websites', 'action' => 'rejected'));
	Router::connect('/mail/welcome', array('controller' => 'accounts', 'action' => 'welcome'));
	Router::connect('/history', array('controller' => 'metric_logs', 'action' => 'index'));

	Router::connect('/article/:article_id', array('controller' => 'custom_landing_page', 'action' => 'index'), array("pass" => array("article_id")));
	Router::connect('/article/:action/*', array('controller' => 'custom_landing_page'));

	// This needs to be last
	Router::connect('/:link', array('controller' => 'landing_page', 'action' => 'index'), array("link" => "[0-9a-z_]+"));

	// Default route to all action controllers
	//  example we can route /cpc/action/get_providers to /cpc_actions/get_providers
	Router::connect('/:controller/action/:action/*', array(), array('controller_suffix' => '_actions'));
    Router::connect('/admin/:controller/action/:action/*', array(), array('controller_prefix' => 'admin_', 'controller_suffix' => '_actions'));
    Router::connect('/admin/:controller/:action/*', array(), array('controller_prefix' => 'admin_'));
/**
 * ...and connect the rest of 'Pages' controller's urls.
 */
//	Router::connect('/pages/*', array('controller' => 'pages', 'action' => 'display'));
?>