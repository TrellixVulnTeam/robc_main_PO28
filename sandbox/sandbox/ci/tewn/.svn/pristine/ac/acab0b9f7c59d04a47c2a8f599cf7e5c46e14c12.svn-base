<?php
error_reporting(E_STRICT);

if (!defined('DS')) {
    define('DS', DIRECTORY_SEPARATOR);
}
if (!defined('ROOT')) {
    define('ROOT', dirname(dirname(__FILE__)));
    echo "Root: " . ROOT . "\n";
}
if (!defined('APP_DIR')) {
    define('APP_DIR', 'app');
    echo "APP_DIR: ". APP_DIR . "\n";
}
if (!defined('CAKE_CORE_INCLUDE_PATH')) {
    define('CAKE_CORE_INCLUDE_PATH', ROOT);
}
if (!defined('WEBROOT_DIR')) {
    define('WEBROOT_DIR', 'webroot');
}
if (!defined('WWW_ROOT')) {
    define('WWW_ROOT', WEBROOT_DIR . DS);
}
if (!defined('CORE_PATH')) {
    if (function_exists('ini_set') && ini_set('include_path', CAKE_CORE_INCLUDE_PATH . PATH_SEPARATOR . ROOT . DS . APP_DIR . DS . PATH_SEPARATOR . ini_get('include_path'))) {
        define('APP_PATH', null);
        define('CORE_PATH', null);
    } else {
        define('APP_PATH', ROOT . DS . APP_DIR . DS);
        define('CORE_PATH', CAKE_CORE_INCLUDE_PATH . DS);
    }
}

if (!include_once(CORE_PATH . 'cake' . DS . 'bootstrap.php')) {
    echo "CakePHP core could not be found. Check the value of CAKE_CORE_INCLUDE_PATH in APP/webroot/index.php. It should point to the directory containing your " . DS . "cake core directory and your " . DS . "vendors root directory.";
    exit();
}

if(!include_once(CORE_PATH . 'controllers' . DS . 'components' . DS . 'cake_memcache.php')) {
    echo "Cake Memcache could not be found.";
    exit();
}


/**
 * Gets the key for this script as daemon
 * 
 * @return string
 */
function daemon_key() {
    return 'daemon::ci_update_counts';
}

/**
 * Time to lock a run for the script
 * if the script crash and the key expire
 * it will let other script to start over
 */
function daemon_time() {
    return 5 * 60;
}


define('CRON_DISPATCHER', true);
define('DAEMON_DISPATCHER', true);

/* Set the configuration for this script */
Configure::write('local', 0);
Configure::write('dev', 0);
Configure::write('staging', 0);

/* Init memcache and gets the key for this script*/
$memcache = new CakeMemcacheComponent();
$key = daemon_key();
$rc = $memcache->get($key);

if($rc == FALSE) {
    echo 'Locking script ' . daemon_key() . '... Starting...' . PHP_EOL;
    while(1) {    
        // Lock the script for this run
        $memcache->set($key, 1, daemon_time());
        
        // Dispatch the controller action given to it
        // eg php cron_dispatcher.php /controller/action
        $Dispatcher = new Dispatcher();
        $Dispatcher->dispatch('/widget_engine/update_display_counts');
        
        // Relax the system by sleeping for a little bit (2 seconds)
        sleep(2);
    }
} else {
    echo 'There is a ' . daemon_key() . ' running... finishing...' . PHP_EOL;
}

/**/
/**/