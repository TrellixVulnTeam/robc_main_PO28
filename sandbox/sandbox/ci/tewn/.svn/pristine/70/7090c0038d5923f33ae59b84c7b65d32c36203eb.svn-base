<?php

namespace Test\Http;
use CI\Http\Service;

class ServiceTest extends \PHPUnit_Framework_TestCase
{
    public function testToString()
    {
        $sExpected = 'The url is http://this.url.dosent.exist.com The parameters are param1=1&param2=2&param3=3 the method is POST';

        $oService = $this->getMockBuilder('\CI\Http\Service')
                         ->disableOriginalConstructor()
                         ->setMethods(array('getUrl'))
                         ->getMock();

        $oService->expects($this->any())
                 ->method('getUrl')
                 ->will($this->returnValue('http://this.url.dosent.exist.com'));

        $oService->setArg('param1', 1);
        $oService->setArg('param2', 2);
        $oService->setArg('param3', 3);

        $sResult = $oService->__toString();

        $this->assertEquals($sExpected, $sResult);
    }

    public function testAddHeader() {
        $aExpected = array('Content-type: application/pdf');

        $oService  = $this->getMockForAbstractClass('\CI\Http\Service');
        $oService->addHeader('Content-type', 'application/pdf');

        $this->assertAttributeEquals($aExpected, 'aHeaders', $oService);
    }

    public function testGetHeaders() {
        $aExpected = array('Content-type: application/pdf', 'Accept: application/json');

        $oService  = $this->getMockForAbstractClass('\CI\Http\Service');
        $oService->addHeader('Content-type', 'application/pdf');

        $this->assertEquals($aExpected, $oService->getHeaders());
    }

    public function testShouldNotAddEmptyHeader() {
        $oService  = $this->getMockForAbstractClass('\CI\Http\Service');
        $oService->addHeader(null, null);

        $this->assertAttributeEquals(array(), 'aHeaders', $oService);
    }

}