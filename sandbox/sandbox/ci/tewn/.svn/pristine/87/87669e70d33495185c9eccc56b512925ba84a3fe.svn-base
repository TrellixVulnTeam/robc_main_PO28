<?php
/**
 * Filter one string with the mysql stop word.,
 * you can see more on: http://dev.mysql.com/doc/refman/5.5/en/fulltext-stopwords.html
 *
 * PHP Version 5.3
 *
 * @category CI
 * @package  CI\Filter
 * @author   Julio Rodriguez <julio.rodriguez@evolvemediallc.com>
 * @license  Evolve Media LLC
 * @link     http://crowdignite.com
 */

namespace CI\Filter;

/**
 * Filter one string with the mysql stop word.,
 * you can see more on: http://dev.mysql.com/doc/refman/5.5/en/fulltext-stopwords.html
 *
 * PHP Version 5.3
 *
 * @category CI
 * @package  CI\Filter
 * @author   Julio Rodriguez <julio.rodriguez@evolvemediallc.com>
 * @license  Evolve Media LLC
 * @link     http://crowdignite.com
 */

class RemoveMysqlStopWord implements \CI\Filter
{

    protected  $sWords = null;
    /**
     * Set stuff up upon instantiation of the object
     */
    public function __construct()
    {
        /* @HACK: The order of the stop words is IMPORTANT.  "can't" needs to come before "can" for the regex to
         * properly match both words
         */
        $this->sWords
            = 'a\'s|a|able|about|above|according|accordingly|across|actually|after|afterwards|' .
            'again|against|ain\'t|all|allow|allows|almost|alone|along|already|also|' .
            'although|always|am|among|amongst|an|and|another|any|anybody|anyhow|' .
            'anyone|anything|anyway|anyways|anywhere|apart|appear|appreciate|appropriate|' .
            'are|aren\'t|around|as|aside|ask|asking|associated|at|available|away|' .
            'awfully|be|became|because|become|becomes|becoming|been|before|beforehand|' .
            'behind|being|believe|below|beside|besides|best|better|between|beyond|both|' .
            'brief|but|by|c\'mon|c\'s|came|can\'t|can|cannot|cant|cause|causes|' .
            'certain|certainly|changes|clearly|co|com|come|comes|concerning|consequently|' .
            'consider|considering|contain|containing|contains|corresponding|could|' .
            'couldn\'t|course|currently|definitely|described|despite|did|didn\'t|different|' .
            'do|does|doesn\'t|doing|don\'t|done|down|downwards|during|each|edu|eg|' .
            'eight|either|else|elsewhere|enough|entirely|especially|et|etc|even|ever|' .
            'every|everybody|everyone|everything|everywhere|ex|exactly|example|except|far|' .
            'few|fifth|first|five|followed|following|follows|for|former|formerly|forth|' .
            'four|from|further|furthermore|get|gets|getting|given|gives|go|goes|' .
            'going|gone|got|gotten|greetings|had|hadn\'t|happens|hardly|has|hasn\'t|' .
            'have|haven\'t|having|he\'s|he|hello|help|hence|her|here\'s|here|' .
            'hereafter|hereby|herein|hereupon|hers|herself|hi|him|himself|his|hither|' .
            'hopefully|how|howbeit|however|i\'d|i\'ll|i\'m|i\'ve|ie|if|ignored|' .
            'immediate|in|inasmuch|inc|indeed|indicate|indicated|indicates|inner|insofar|' .
            'instead|into|inward|is|isn\'t|it\'d|it\'ll|it\'s|it|its|itself|just|' .
            'keep|keeps|kept|know|known|knows|last|lately|later|latter|latterly|' .
            'least|less|lest|let\'s|let|like|liked|likely|little|look|looking|looks|' .
            'ltd|mainly|many|may|maybe|me|mean|meanwhile|merely|might|more|moreover|' .
            'most|mostly|much|must|my|myself|name|namely|nd|near|nearly|necessary|' .
            'need|needs|neither|never|nevertheless|new|next|nine|no|nobody|non|none|' .
            'noone|nor|normally|not|nothing|novel|now|nowhere|obviously|of|off|often|' .
            'oh|ok|okay|old|on|once|one|ones|only|onto|or|other|others|' .
            'otherwise|ought|our|ours|ourselves|out|outside|over|overall|own|particular|' .
            'particularly|per|perhaps|placed|please|plus|possible|presumably|probably|' .
            'provides|que|quite|qv|rather|rd|re|really|reasonably|regarding|regardless|' .
            'regards|relatively|respectively|right|said|same|saw|say|saying|says|second|' .
            'secondly|see|seeing|seem|seemed|seeming|seems|seen|self|selves|sensible|' .
            'sent|serious|seriously|seven|several|shall|she|should|shouldn\'t|since|six|' .
            'so|some|somebody|somehow|someone|something|sometime|sometimes|somewhat|' .
            'somewhere|soon|sorry|specified|specify|specifying|still|sub|such|sup|sure|' .
            't\'s|take|taken|tell|tends|th|than|thank|thanks|thanx|that\'s|that|' .
            'thats|the|their|theirs|them|themselves|then|thence|there\'s|there|' .
            'thereafter|thereby|therefore|therein|theres|thereupon|these|they\'d|they\'ll|' .
            'they\'re|they\'ve|they|think|third|this|thorough|thoroughly|those|though|' .
            'three|through|throughout|thru|thus|to|together|too|took|toward|towards|' .
            'tried|tries|truly|try|trying|twice|two|un|under|unfortunately|unless|' .
            'unlikely|until|unto|up|upon|us|use|used|useful|uses|using|usually|' .
            'value|various|very|via|viz|vs|want|wants|was|wasn\'t|way|we\'d|we\'ll|' .
            'we\'re|we\'ve|we|welcome|well|went|were|weren\'t|what\'s|what|whatever|' .
            'when|whence|whenever|where\'s|where|whereafter|whereas|whereby|wherein|' .
            'whereupon|wherever|whether|which|while|whither|who\'s|who|whoever|whole|' .
            'whom|whose|why|will|willing|wish|with|within|without|won\'t|wonder|' .
            'would|wouldn\'t|yes|yet|you\'d|you\'ll|you\'re|you\'ve|you|your|yours|yourself|yourselves|zero';
    }

    /**
     * Return array containing the stop words.
     *
     * @return array containing the stop words
     */
    public function getStopWords()
    {
        return explode('|', $this->sWords);
    }

    /**
     * Apply stop word filter to a string.
     *
     * @param string $value The value to apply this filter
     *
     * @return string The filtered $value - string is lower case
     */
    public function filter($value)
    {
        if (empty($value)) {
            return '';
        }

        $value = iconv('UTF-8', 'ASCII//TRANSLIT', $value);
        $value = preg_replace('/[^a-zA-Z0-9\']/s', ' ', strtolower($value));
        $aQuotesSpace = array('\' ', ' \'');
        $value = str_replace($aQuotesSpace, ' ', $value);
        $value = preg_replace('/\b('.$this->sWords.')\b/', '', $value);
        $value = preg_replace('/\s\s+/', ' ', $value);
        $value = trim($value);

        return $value;
    }

}
