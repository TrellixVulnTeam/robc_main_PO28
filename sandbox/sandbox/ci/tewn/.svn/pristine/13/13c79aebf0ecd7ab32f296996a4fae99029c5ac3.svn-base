<?php

namespace Test\Content\Provider;
use CI\Content\Provider\ContentAd;

class ContentAdTest extends \PHPUnit_Framework_TestCase
{
    public function testGetCorrectAnswer()
    {
        $aExpected = array(
            'title' => 'A Simple Way to Lose Pounds and Relieve Gas and Bloating',
            'description' => 'A Simple Way to Lose Pounds and Relieve Gas and Bloating',
            'image' => 'http://d2o3gnwdwywtvm.cloudfront.net/300x250/probioslimhlworinge.jpg',
            'link' => 'http://api.content.ad/Lib/TrackOutboundClick.aspx?hid=1&wid=25043&uid=1505&did=125658&sid=5194&type=4&s=VMBRSCON3&pid=1&cid=&c=US&d=&redirectUrl=http%3a%2f%2fwww.howlifeworks.com%2fhealth_beauty%2fA_Simple_Way_to_Lose_Pounds_and_Relieve_Gas_and_Bloating_458%3fag_id%3d1505%26wid%3dF41A5B02-E037-406F-8A49-E6BACEF7C93E%26did%3d125658%26cid%3d1005%26si_id%3d5194%26pubs_source%3dmpt%26pubs_campaign%3d20140813-1505',
            'extra' => '<img class="ac_pixel" src="http://api.content.ad/pixel.gif?s=VMBRSCON3&cid=&ip=72.172.76.3&wid=25043&cb=635435447976034816&c=US&d=" height="1" width="1" />'
        );

        $oContentAdProviderMock = new ContentAdProviderMock();
        $aResult = $oContentAdProviderMock->provide(array());
        $this->assertEquals($aExpected, $aResult);
    }

    public function testFail()
    {
        $aExpected = array();

        $oContentAdProviderMock = new ContentAdProviderMockFail();
        $aResult = $oContentAdProviderMock->provide(array());
        $this->assertEquals($aExpected, $aResult);
    }

    public function testAcceptFollowLocationOpt()
    {
        $bExpected = true;

        $oContentAdServiceMock = new ContentAdServiceMockAcceptOpt(array());
        $aResult = $oContentAdServiceMock->query(array());
        $this->assertEquals($bExpected, $aResult);
    }

    public function testDontAcceptFollowLocationOpt()
    {
        $bExpected = false;

        $oContentAdServiceMock = new ContentAdServiceMockDontAcceptOpt(array());
        $aResult = $oContentAdServiceMock->query(array());
        $this->assertEquals($bExpected, $aResult);
    }
}

class ContentAdProviderMock extends \CI\Content\Provider\ContentAd
{
    protected function getServiceObject($aOptions)
    {
        $this->oService = new ContentAdServiceMock(array());
        return $this->oService;
    }
}

class ContentAdProviderMockFail extends \CI\Content\Provider\ContentAd
{
    protected function getServiceObject($aOptions)
    {
        $this->oService = new ContentAdServiceMockFail(array());
        return $this->oService;
    }
}

class ContentAdServiceMock extends \CI\Http\Service\ContentAd
{
    public function query()
    {
        $this->sRawResult = '{
            "slot_count":1,
            "debug_pixel":"\u003cimg class=\"ac_pixel\" src=\"http://api.content.ad/pixel.gif?s=VMBRSCON3&cid=&ip=72.172.76.3&wid=25043&cb=635435447976034816&c=US&d=\" height=\"1\" width=\"1\" /\u003e",
            "articles":[{
                "slot":1,
                "title":"A Simple Way to Lose Pounds and Relieve Gas and Bloating",
                "url":"http://api.content.ad/Lib/TrackOutboundClick.aspx?hid=1&wid=25043&uid=1505&did=125658&sid=5194&type=4&s=VMBRSCON3&pid=1&cid=&c=US&d=&redirectUrl=http%3a%2f%2fwww.howlifeworks.com%2fhealth_beauty%2fA_Simple_Way_to_Lose_Pounds_and_Relieve_Gas_and_Bloating_458%3fag_id%3d1505%26wid%3dF41A5B02-E037-406F-8A49-E6BACEF7C93E%26did%3d125658%26cid%3d1005%26si_id%3d5194%26pubs_source%3dmpt%26pubs_campaign%3d20140813-1505",
                "image":"http://d2o3gnwdwywtvm.cloudfront.net/300x250/probioslimhlworinge.jpg",
                "sponsored":true,
                "sponsored_by":"howlifeworks.com"}]}';

        $this->postProcess();
        return $this;
    }
}


class ContentAdServiceMockAcceptOpt extends \CI\Http\Service\ContentAd
{
    public function query()
    {
        return $this->getCurlObject(null)->allowFollowLocationOpt();
    }

    protected function getCurlObject($sUrl)
    {
        return new CurlMockAllowFollowLocationOpt($sUrl);
    }

}

class ContentAdServiceMockDontAcceptOpt extends \CI\Http\Service\ContentAd
{
    public function query()
    {
        return $this->getCurlObject(null)->allowFollowLocationOpt();
    }

    protected function getCurlObject($sUrl)
    {
        return new CurlMockDontAllowFollowLocationOpt($sUrl);
    }

}

class ContentAdServiceMockFail extends \CI\Http\Service\ContentAd
{
    public function query()
    {
        $this->sRawResult = '';
        $this->postProcess();
        return $this;
    }
}

class CurlMockAllowFollowLocationOpt extends \CI\Http\Curl
{
    public function allowFollowLocationOpt(){
        return true;
    }
}

class CurlMockDontAllowFollowLocationOpt extends \CI\Http\Curl
{
    public function allowFollowLocationOpt(){
        return false;
    }
}