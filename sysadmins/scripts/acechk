#!/bin/sh
#
# Product ACE context configs without entries unique to each core.
#
# Written by Dairenn Lombard & Hondo Cabral


# Only enable this for debugging
#set -x

# This lets us reverse the configs in case change start being made to the ACE in core2
# instead of core1.

core1="core1.gnmedia.net"
core2="core2.gnmedia.net"

confpath="/app/shared/var/rancid/configs"
#confpath="/tmp/crap"
diffpath="/app/shared/rancid/home"

#mailaddr="dairenn.lombard@gorillanation.com"
mailaddir="sysadmins@gorillanation.com"

# We need to backup the part of the configs that are identical so we can compare
# the configs found on this run to these ".previous" files.

ls -1 $diffpath/*.mirror > /dev/null
if [ $? -lt "1" ] ; then
	for old_file in `ls -1 $diffpath/*.mirror`
	do
		mv -f $old_file $old_file.previous
	done
fi

echo -n "Processing: "
for file in `ls -1 $confpath/*.ace1.$core1`
do
	context=`basename "$file"`
	compfile=`echo $context | sed s/$core1/$core2/`
	# Print only the lines that match in the comparison config file
	grep -x --file=$confpath/$compfile $confpath/$context > $diffpath/$context.mirror
	echo -n "."
done

echo ; echo -n "Checking for changes since last config capture: "
for check_file in `ls -1 $diffpath/*.mirror`
do
	grep -q -v -x --file=$check_file.previous $check_file
	if [ $? -lt "1" ] ; then
		# Make sure this new line does not appear in the context of the other ACE
		newline=`grep -v -x --file=$check_file.previous $check_file`
		context=`basename "$check_file"`
		compfile=`echo $context | sed s/"$core1".mirror/"$core2"/`
		grep -q "$newline" $confpath/$compfile
		if [ $? -gt "0" ] ; then
			echo ; echo "$check_file has $newline but it is not in $confpath/$compfile."
			echo "Config sync possibly broken.  E-mailing..."
			diff -c --suppress-common-lines $confpath/$compfile $check_file | mail -s "Possible core ACE config sync issue. Check newly added lines in diff." $mailaddr
#			comm -13 $confpath/$compfile $check_file | mail -s "Possible core ACE config sync issue." $mailaddr
		fi
	else
		echo -n "."
	fi
done

echo ; echo "Done."
