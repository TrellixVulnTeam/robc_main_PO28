#!/usr/bin/perl -w
# rvicchiullo
# create config for phpMemcachedAdmin
# pass it either dev,stg, or prd
#
use strict;
use warnings;
use File::Compare;
use File::Copy 'move';

# (1) quit unless we have the correct number of command-line args
#my $num_args = $#ARGV + 1;
#if ($num_args != 1) {
#  print "\nUsage: environment\n";
#  exit;
#}


my $node = '';
# my $type = $ARGV[0];
#my $node_list = `/opt/xcat/bin/nodels|grep -E "^mem.*$type"|egrep -v "mongodb|redis"|sort`;
my $node_list = `/opt/xcat/bin/nodels|grep -E "^mem"|egrep -v "mongodb|redis"|sort`;
my %node_hash = ();

open (MYFILE, ">/tmp/out_pma");

for (split /^/, $node_list) {
	my $node = $_;
	$node =~ s/.lax.gnmedia.net//g;
	my ($f,$s) = split(/-/,$node);
	chomp($s);
	push @{ $node_hash{$s} }, $f;
}

print MYFILE  "<?php
return array (
  'stats_api' => 'Server',
  'slabs_api' => 'Server',
  'items_api' => 'Server',
  'get_api' => 'Server',
  'set_api' => 'Server',
  'delete_api' => 'Server',
  'flush_all_api' => 'Server',
  'connection_timeout' => '1',
  'max_item_dump' => '100',
  'refresh_rate' => 5,
  'memory_alert' => '80',
  'hit_rate_alert' => '90',
  'eviction_alert' => '0',
  'file_path' => 'Temp/',
  'servers' =>
  array (
";

my $k, my $v, my $x ='';
while(my ($k,$v) = each %node_hash) {
print MYFILE  "
    '$k' =>
       array (";
	
  foreach my $x (@$v) {
	print MYFILE  "
	'$x-$k.lax.gnmedia.net' =>
	array (
	  'hostname' => '$x-$k.lax.gnmedia.net',
	  'port' => '11211',
	),"
	
  }

print MYFILE  "
    ),";

}

print MYFILE  "
  ),
);";

close(MYFILE);

if (compare("/tmp/out_pma","/tmp/latest_pma")) {
  move "/tmp/out_pma", "/tmp/latest_pma";
  system("scp /tmp/latest_pma app1v-dashboards.tp.prd.lax.gnmedia.net:/tmp/");
}
