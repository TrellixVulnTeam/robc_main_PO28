=pod

=head1 NAME

rnetapp - remote NetApp management

=head1 SYNOPSIS

B<rnetapp> B<filer>[B</vserver>] B<command> B<subcommand> [B<options...>]

=head1 DESCRIPTION

rnetapp is a front-end to NetApp's remote API. It connects to the filer over
https using the specified username and password. The goal is to make all of the
common actions easy. Advanced management is out of scope of rnetapp.

rnetapp can create and manage volumes, exports, snapshots, and fetch the NFS
counters.

See 'rnetapp help' for the full list of options.

=head1 CLUSTER MODE

rnetapp can connect to cDOT clusters by specifying either the cluster vserver
with the data vserver, or by connecting to directly to the data vserver.  For
example, these commands may be equivalent depending on your environment.

   rnetapp cluster-mgnt.example.com/myvserver volume list
   rnetapp myvserver.example.com volume list

Note that some commands, like all aggregate commands, are only available in the
cluster vserver. Do not specify a data vserver when using any aggregate
commands.

=head1 CONFIGURATION

The only configuration is for authentication. The default username is the value
of the USER environmental variable. If rnetapp will prompt for a password if
none is supplied.

The username and password can be put in ~/.rnetapprc or /etc/rnetapprc.
Values in ~/.rnetapprc override values in /etc/rnetapprc.

   # Set the default user/pass
   username=root
   password=na!secret
   apiversion=1.3
   # Some filers have a different user/pass
   <nfs1.foo.example.com>
   username=root
   password=foo!secret
   apiversion=1.20
   match=nfs1.foo
   </nfs1.foo.example.com>

An B<apiversion> of at least 1.17 is mandatory for Cluster-Mode support. The
default is 1.3. Raising the default to 1.20 will probably happen after
sufficient testing in 7-mode has been completed.

The B<match> directive specifies a perl regex to match other names for this
filer. In the example above, nfs1.foo or nfs1.foo.anything would be matched and
rnetapp will connect to nfs1.foo.example.com.

=head1 COMMANDS

=head2 aggr

=over

The only subcommand for aggregates is B<list>. Creating aggregates is beyond
the scope for rnetapp. B<list> supports -q, -n, -v, -l, and -m flags. The -q option
suppresses headers. The -n option prints numbers instead of humanized strings.
The -v option enables a verbose mode that looks just like 'aggr status' in
the ONTAP CLI. The -l option adds the lost of volumes to verbose mode. The -m
option will only print the aggregate name with the most available disk space.

In cDOT, do not specify a data vserver.

=back

=head2 lif

=over

The B<lif> command only works in Cluster-Mode because 7-mode doesn't have lifs.

The only subcommand for lifs is B<list>. This subcommand accepts the -q option
to suppress headers and the -v option to print more information.

=back 

=head2 volume

=over

Volumes are well supported and are one of the primary reasons for rnetapp.

=over

=item list

The list subcommand lists all of the basic size and usage information about
volumes. The -s option prints snapshot information. The -i option prints inode
information. The -q option suppresses headers and removes formatting. The -n
option prints numbers instead of humanized strings.

=item rename

Renames the specified volume. Since ONTAP ignores exports when renaming
volumes, rnetapp first removes exports from the original volume and adds them
to the new volume.

=item create

Create a new volume of the specified size on the specified aggregate.

=item delete/remove

Delete the specified volume. rnetapp will refuse to delete exported volumes.
Delete and remove are synonyms.

=item size/resize

Change or retrieve the size of the volume. Since the new size value is passed
directly to ONTAP, the fancy [+|-]<size>k|m|g|t] syntax is supported. If it
works on the NetApp, it will work here.

If a new size is specified, "autosize reset" is automatically run.

=item maxfiles

Change the number of max files of a volume. At the time of this writing, NetApp
can only increase this value. This is not a limitation of rnetapp or ONTAP.

=item mkdir/rmdir

Attempt to create/delete a directory on the volume. Directories are created as
root with 755 permissions.

=item online/offline

Set the named volume online or offline.

=item autosize

Change or retrieve the autosize settings. The options are exactly like the NetApp command-line with only 1 slight difference: "reset" does not change whether autosize is enabled or not.

autosize <volname> [-m <size>[k|m|g|t]] [-i <size>[k|m|g|t]]
    [ on | off | reset ]

-m sets the maximum size of the volume. -i sets the size increments. "reset" sets maximum top 120% of the size of the volume and sets the increment to 5%.

=item junction

cDOT only, add and remove junction paths on volumes. The basic form is to
supply the name of the volume and the full junction path (a full mount point,
not just the parent directory). 

Junction paths are removed by supplying B<remove> instead of a path.

Note that adding exports automatically adds the junction path.

=item move

move [<volume>] [<aggr> <vserver>]

cDOT only, list and start volume moves. With no args, all current moves are
displayed. With one or two args, moves for that volume are displayed. With three args,
move the volume to the specified aggregate and vserver.

=item option <volume> [<option> [<value>]]

Set and display volume options. Each volume has too many options to list here.

=item expolicy [<volname> [<policy>]]

cDOT only. Set and display volume export policies.

=item sspolicy [<volname> [<policy>]]

cDOT only. Set and display volume snapshot policies.

=back

=back

=head2 exports

=over

Exports are well supported and are one of the primary reasons for rnetapp. Note
that exports expects a B<path>, not a volume.

=over

=item file

Generate an exports(5) file from memory. Use this to compare the NetApp's
in-memory exports with the version on disk.

=item list

The list subcommand lists all of exports.

=item add

The add subcommand adds an export to the specified path. Prefix the export with
"ro:" to create a read-only export. rnetapp will refuse to export
subdirectories of a volume.

Also automatically adds the junction path in cmode.

=item remove/delete

Remove an export from the path. Use B<all> to completely unexport the path.

=item copy

Copy the exports from one path to another path.

=item search

Search all exports for the specified hostname or IP.

=item removehost

Remove all exports to the given host, ip, or network.

=item policy

cDOT only. List and manage cDOT export policies. The policy subcommand has
subsubcommands: list, create, delete, and rename.

This is low-level access to cDOT export policies. Only use if you need to.

=item rule

cDOT only. List and manage cDOT export policies. The policy subcommand has
subsubcommands: list, create, delete, and find.

This is low-level access to cDOT export policy rules. Only use if you need to.

=back

=back

=head2 snapshot

=over

Snapshots are well supported and are one of the primary reasons for rnetapp.

=over

=item list

The list subcommand lists detailed snapshot information.

=item sched

Show or set snapshot schedules. The supported format is "[weeks [days
[hours[@<list>]]]]]". Minutes are not supported because noone cares about
minutes.

=item reserve

Show or set the snapshot reserved percentage space.

=item create

Create a snapshot of the specified volume right now. An optional snapmirror
label can be supplied after the volume name.

=item delete/remove

Delete a snapshot of the specified volume right now. The psuedonym "ALL"
deletes all snapshots of the volume.

=item rename

Rename a snapshot.

=item mount
The mount subcommand exports the snapshot to the specified host and mounts it.
This operation is a little brittle. It requires password-less authentication to
the specified host. The mounted path is printed to stdout.

=item umount

Umount the snapshot mounted by the mount subcommand.

=back

=back

=head2 nfsmonitor

=over

Experimental support exists for the nfsmonitor API. The supported subcommands
are B<list>, B<reclaim>, B<remove>, B<removelocks>. See the ONTAP documentation
for details.

=back

=head2 nfsstat

=over

Retrieve the NFS counters from the NetApp.

=over

=item get

Retrieve NFS counters for the specified IP.

=item zero

Zero the NFS counters.

=item top

Retrieve NFS counters for the top NFS consumers and loop kind of like top but
without all the ncurses stuff.

=over

=item -c <clients>

The number of clients to display. Default is 10 if resolution is enabled.
Default is 20 if resolution is disabled.

=item -i <iterations>

The number of iterations, or the number of times to loop before exiting.

=item -s <sleepseconds>

The number of seconds to sleep before iterations. The default is 4.

=item -t

Print the initial counter totals before looping.

=item -n

Only show inernet numbers; don't resolve client IPs to hostnames.

=back

=back

=back

=head2 snapvault

=over

Basic snapvault commands. See http://www.wafl.co.uk/snapvault/ for a good overview of NetApp Snapvaults.

=over

=item status 

status [-x][-v] [path]

Show status of existing snapvaults. Use -x when connecting to a destination
filer. Use -v for verbose output that prints volumes and qtrees that don't have
snapvaults.

=item list

list [-x] [path]

Query a filer for a list of all known snapvault relationships. Use -x when connecting to a destination filer.

=item sched

sched [-x] [<volname> [<schedname> delete|<retention>[\@<days>[\@<hours>]]]]

Get/set/delete a snapvault schedule.  Same format as the NetApp snapvault snap
command. The -x option is used on a destination filer.

retention=count{d|m|y}|default

days=mon|tue|wed|thu|fri|sat|sun (combined as lists of ranges). The default is mon-sun

hours=(0..23) (combined as lists of ranges and intervals. The default is 0.

=item start

start [-k <kbs>] [-t <n>] [-S source-system:source-path] destination-path. 

Start a snapvault relationship. Only used on a destination filer.  The -k is
for limiting is for limiting bandwidth. The -t option sets the number of times
that updates for the qtree should be tried before giving up. The default is 2.

=item update

update destination-path 

On a destination filer, initiates a snapshot transfer. The source filer will
create a snapshot for this transfer. It is required that this destination path
has already been configured as part of a snapvault relationship.

=item release

release <sourcepath> [<destfiler:/destination-path>]

That source path will no longer be replicated to the destination filer. The
destination information is optional if only one relationship exists. Only used
on the source filer. Use B<stop> on the secondary filer.

=item stop

stop secondary-path

Stop a snapvault relationship. Only used on a destination filer.


=back

=back

=head2 lun

=over

Basic lun management commands

=over

=item create

create <path> <size>k|m|g|t

Create a lun of the specified size at the specified path on the filer.

=item resize

resize <path> <size>k|m|g|t

Resize the given lun to the specified size.

=item destroy

destroy <path>

Destroy the specified lun.

=item list

list [-q] [-n] [<path>]

Query a filer for a list of existing luns. If you specify a lun, it will show you information
on just that lun. The -q option suppresses headers. The -n option prints numbers instead of
humanized strings.

=item map

map [<path> [<igroup>]]

With no arguments, map will show you all of the current lun -> igroup mappings on the filer.

If you specify a lun, it will show you the lun -> igroup mappings for that lun.

If you specify both a lun and an igroup, it will create the lun -> igroup mapping for you.

=item unmap

unmap <path> <igroup>

Removes the specified lun -> igroup mapping relationship.

=back

=back

=head2 igroup

=over

Basic igroup management commands

=over

=item create

create <igroup> [<initiator iqn>... ]

Create the specified igroup and add the specified initiators to the new group.

=item destroy

destroy <igroup>

Destroy the specified igroup.

=item list

list [<igroup>]

Show information about the igroups on the filer. If you specify an igroup, it will show you just that igroup.

=item add

add <igroup> <initiator iqn> [<initiator iqn>... ]

Add the specified initiator(s) to the specified igroup.

=item remove

remove <igroup> <initiator iqn> [<initiator iqn>... ]

Remove the specified initiator(s) from the specified igroup.

=back

=back

=head2 qtree

=over 

Basic qtree management.

=over

=item create

create <volume> <qtree> [<mode>]
create <qtreepath>

The first form takes the name of the volume and the name of the qtree. The mode
defaults to 0755. The second form just takes the full path to the desired
qtree.

=item delete

delete [-r] <qtreepath> 

Delete a qtree by specifying its full path. Use -r to recursively delete the contents of the qtree.

=item list

list [<volume>]

List qtrees by volume. Oddly, it is not possible to list a specific qtree.

=item rename

rename <oldpath> <newpath>

=back

=back

=head2 counter

=over

List and fetch performance counters directly from your NetApp. Use the commands
in the order listed below. First, find your subsystem (called an object).
Second, find your instance(s) and counter(s) using your object. Finally, use
all 3 of these pieces of information to fetch your counter value.

=over 

=item listobjects

listobjects [-d]

Lists valid objects known to the system. These represent entire subsystems
within the NetApp.

Normally, objects with a privilege level of diag are not shown because they are
not gauranteed to work correctly from release to release. Use -d to display
diag-level objects.

=item listinstances

listinstances <objectname>

Lists valid instances for the specified object. These represent specific items
within a subsystem.

=item listcounters

listcounters <objectname> [-d] [-v] [countername]

Lists valid counters for the specified object. Use -v to display very detailed
information about each counter.

Normally, counters with a privilege level of diag are not shown because they
are not gauranteed to work correctly from release to release. Use -d to display
diag-level counters.

Specifing a counter lists only that counter. This implies verbose and diag.

=item fetch

fetch <objectname> <instance,...>|all <counter,...>|all

For a given object (representing a subsystem), fetch all of the specified
counters for the specified instances. Supply comma-separated lists of instances
and counters. Or specify 'all' for either instances and/or counters.

Example:

./rnetapp filer1.example.com counter fetch volume my_vol1,my_vol2 read_ops,write_ops

=back

=back

=head2 snapmirror

=over

Rnetapp has basic snapmirror support that has only been tested in Cluster Mode.
It can create, delete, list, etc. Generally speaking, these commands are run on
the destination filer. Each snapmirror relationship will be identified by its
destination path.

Scheduling updates is not support yet.

=over

=item list

Lists snapmirror relationships and some basic information. Use -x when talking to a destination filer.
Optionally, supply a destination path to view.  (7-mode support is weak sauce)

=item create

create -S sourcevfiler:/sourcepath [-t <DP|LS|V|R|TDP>] [-p <snapshot-policy>] <destvfiler:/destination-path>

This is a combination of ONTAP's snapmirror create and initialize commands. It
is run on the destination filer. The destination volume must exist, be online,
and of type B<DP>.

The B<-w> option will cause rnetapp to block and wait for the update to
complete.

The following types are supported:
    dp - 'data_protection' - For Disaster Recovery (DR)
    ls - 'load_sharing' - For load-sharing within the same Vserver
    v - 'vault' - For SnapVault
    tdp - 'transition_data_protection' - For 7-mode to Cluster-Mode transition
    s -'restore' - For restoring a data protection (DP) volume data

=item update

Update the data in the destination path. The B<-w> option will cause rnetapp to
block and wait for the update to complete.

=item release -s <sourcepath> -d <destpath>

Release the source filer from the snapmirror relationship. The paths used must
exactly match the output of B<list>.  Try not specifying the source filer.

=item break

Break the relationship identified by the destination path. When this happens,
the destination volume changes from type TDP to RW.

=item delete

Delete the relationship identified by the destination path. 

=item wait

If the snapmirror relationship is currently transferring, block and wait for
completion. Rnetapp will print the number of bytes transferred.

=back

=back

=head2 System

=over

Retrieve various info about the system.

=over

=item info

System info for 7-mode filers.

=item ontapiversion

ONTAPi API Version

=item vendorinfo

Vendor info for 7-mode filers.

=item version

ONTAP OS Software version

=item getapis

List all supported APIs

=item nodeinfo

Node-level information. Must supply the nodename.

=back

=back

=head1 ENVIRONMENT

NETAPP_USERNAME

NETAPP_PASSWORD

=head1 BUGS

Report bugs to garrick.staples@gorillanation.com.

=head1 AUTHOR

Garrick Staples, Gorilla Nation, LLC.
    
=head1 SEE ALSO

The NetApp SDK Documentation

=cut

