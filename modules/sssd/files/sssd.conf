# This file is managed by Puppet do not modify it
[sssd]
domains = LOCAL, EVM-TP
services = nss, pam
config_file_version = 2

[nss]
filter_groups = root
filter_users = root

[pam] 
offline_credentials_expiration = 7
offline_failed_login_delay = 5 

[domain/LOCAL]
id_provider = local
auth_provider = local
access_provider = permit

[domain/EVM-TP]
description = Evolve Media Tech Platform LDAP Config
id_provider = ldap
# no auth provider was for when we wanted to try ssh keys only.
#auth_provider = none
auth_provider = ldap

#debug_level = 9

## Caching settings
##
# Determines if user credentials are also cached in the local LDB cache
# User credentials are stored in a SHA512 hash, not in plaintext
cache_credentials = true

# How many seconds should nss_sss consider entries valid before asking the backend again
entry_cache_timeout = 900 

# Number of days entries are left in cache after last successful login before 
# being removed during a cleanup of the cache. 0 means keep forever. The
# value of this parameter must be greater than or equal to offline_credentials_expiration.
account_cache_expiration = 7

# If the authentication provider is offline, how long should we allow cached logins 
# (in days since the last successful online login).
offline_credentials_expiration = 7 

# If the authentication provider is offline, how many failed login attempts are allowed.
offline_failed_login_attempts = 5 

# The time in minutes which has to pass after offline_failed_login_attempts has been 
# reached before a new login attempt is possible.
# If set to 0 the user cannot authenticate offline if offline_failed_login_attempts 
# has been reached. Only a successful online authentication can
# enable offline authentication again.
offline_failed_login_delay = 5



## LDAP server settings
##
# Provides the ability to select preferred address family to use when performing DNS lookups.
lookup_family_order = ipv4_only 

# UID and GID limits for the domain. If a domain contains an entry that is outside these limits, it is ignored.
min_id=501


# Determines if a domain can be enumerated. This parameter can have one of the following values:
#
#          TRUE = Users and groups are enumerated
#
#          FALSE = No enumerations for this domain
#
#          Default: FALSE
#
#          Note: Enabling enumeration has a moderate performance impact on 
#          SSSD while enumeration is running. It may take up to several minutes after SSSD
#          startup to fully complete enumerations. During this time, individual 
#          requests for information will go directly to LDAP, though it may be slow, due
#          to the heavy enumeration processing.
#
#          While the first enumeration is running, requests for the complete 
#          user or group lists may return no results until it completes.
#
#          Further, enabling enumeration may increase the time necessary to 
#          detect network disconnection, as longer timeouts are required to ensure that
#          enumeration lookups are completed successfully. For more 
#          information, refer to the man pages for the specific id_provider in use.
enumerate = true

# following are pretty self-explanatory
ldap_uri = ldaps://ldap.gnmedia.net
ldap_search_base = dc=gnmedia,dc=net
ldap_tls_cacert = /etc/gncerts/evmrootca.crt

#ldap_default_bind_dn = CN=svc_linuxldap,OU=Service Accounts,DC=mydomain,DC=com 
#ldap_default_authtok_type = password 
#ldap_default_authtok = 


# An optional base DN, search scope and LDAP filter to restrict LDAP searches for this attribute type.
#
#          syntax:
#
#              search_base[?scope?[filter][?search_base?scope?[filter]]*]
#
#          The scope can be one of "base", "onelevel" or "subtree". The 
#          filter must be a valid LDAP search filter as specified by
#          http://www.ietf.org/rfc/rfc2254.txt
#
#          For examples of this syntax, please refer to the “ldap_search_base” examples section.
#
#          Default: the value of ldap_search_base
#
#          Please note that specifying scope or filter is not supported for 
#          searches against an Active Directory Server that might yield a large number of
#          results and trigger the Range Retrieval extension in the response.
#
# an example for us:
# 
#            ldap_search_base = cn=host_specific,dc=example,dc=com?subtree?(host=thishost)?dc=example.com?subtree?
#
#          Note: It is unsupported to have multiple search bases which 
#          reference identically-named objects (for example, groups with the same name in two
#          different search bases). This will lead to unpredictable behavior on client machines. 
#
# ldap_user_search_base = ou=People,dc=gnmedia,dc=net?subtree
# ldap_group_search_base = ou=Groups,dc=gnmedia,dc=net?subtree

# Specifies the comma-separated list of URIs of the LDAP servers to which 
# SSSD should connect in the order of preference to change the password of a
# user. Refer to the “FAILOVER” section for more information on failover and server redundancy.
# 
# ldap_chpass_uri = ldap://app1v-ldap.tp.prd.lax.gnmedia.net
#


#           With this option a client side evaluation of access control attributes can be enabled.
#
#           Please note that it is always recommended to use server side 
#           access control, i.e. the LDAP server should deny the bind request with a suitable
#           error code even if the password is correct.
#
# rhds, ipa, 389ds: use the value of ldap_ns_account_lock to check if access is allowed or not.
#
# ldap_account_expire_policy = 389ds
#

 
