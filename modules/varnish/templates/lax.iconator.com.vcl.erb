#-e This is a basic VCL configuration file for varnish.  See the vcl(7)
#man page for details on VCL syntax and semantics.
#
#Default backend definition.  Set this to point to your content
#server.
#


# www-lax-001.iconator.com has address 10.2.12.43
# www-lax-002.iconator.com has address 10.2.12.44
# www-lax-003.iconator.com has address 10.2.12.45
# www-lax-005.iconator.com has address 10.2.12.47
backend iconator1 {
  .host = "10.2.12.43";
  .port = "80";
}
backend iconator2 {
  .host = "10.2.12.44";
  .port = "80";
}
backend iconator3 {
  .host = "10.2.12.45";
  .port = "80";
}
backend iconator5 {
  .host = "10.2.12.47";
  .port = "80";
}

director www_director round-robin {
    { .backend = iconator1; }
    { .backend = iconator2; }
    { .backend = iconator3; }
    { .backend = iconator5; }
}


#
#Below is a commented-out copy of the default VCL logic.  If you
#redefine any of these subroutines, the built-in logic will be
#appended to your code.
#
sub vcl_recv {
    set req.backend = www_director;

    if (req.request != "GET" &&
      req.request != "HEAD" &&
      req.request != "PUT" &&
      req.request != "POST" &&
      req.request != "TRACE" &&
      req.request != "OPTIONS" &&
      req.request != "DELETE") {
        /* Non-RFC2616 or CONNECT which is weird. */
        error;
    }
    if (req.http.Cache-Control ~ "no-cache" || req.http.Pragma ~ "no-cache" ) {
        purge_url(req.url);
        return(pass);
    }

    if (req.request != "GET" && req.request != "HEAD") {
        /* We only deal with GET and HEAD by default */
        return(pass);
    }

   /* Tricky poll management, FIXME should not need an iframe --> Dex */
   if (req.url ~ "myaccount.php") {
        return(pipe);
    }

    if (req.url ~ "\.(css|gif|ico|jpg|js|png|swf)$") {
		unset req.http.cookie;
		return(lookup);
	}

    if (req.http.Authorization) {
        /* Not cacheable by default */
        return(pass);
    }

    return(lookup);
}


sub vcl_hash {
    set req.hash += req.url;
    if (req.http.host) {
        set req.hash += req.http.host;
    } else {
        set req.hash += server.ip;
    }
    return(hash);
}

sub vcl_hit {
#    if (!beresp.cacheable) {
#        pass;
#    }
    return(deliver);
}

sub vcl_fetch {
	# By default, we cache all static content for 30 minutes
    if (req.url ~ "\.(css|gif|ico|jpg|js|png|swf)$") {
        set beresp.ttl = 10m;
		unset beresp.http.set-cookie;

		# See http://varnish.projects.linpro.no/wiki/VCLExampleLongerCaching
		/* Remove Expires from backend, it's not long enough */
		unset beresp.http.expires;

		/* Set the client's TTL on this beresp.ct */
		set beresp.http.cache-control = "max-age = 600";

		/* Don't use Pragma */
		unset beresp.http.pragma;
     }

    if (beresp.http.Pragma ~ "no-cache" ||
        beresp.http.Cache-Control ~ "no-cache") {
        return(pass);
    }

    if (req.url ~ "poll.php") {
        return(deliver);
    }

	return(deliver);
}

sub vcl_deliver {
	# See http://varnish.projects.linpro.no/wiki/VCLExampleHitMissHeader
        if (obj.hits > 0) {
                set resp.http.X-Cache = "HIT from <%= fqdn.gsub(".gnmedia.net","") %>";

        } else {
                set resp.http.X-Cache = "MISS from <%= fqdn.gsub(".gnmedia.net","") %>";
        }
}
